<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20241.24.0308.0326                               -->
<workbook original-version='18.1' source-build='2024.1.1 (20241.24.0308.0326)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='global_superstore_2016' inline='true' name='federated.09ed1vq0jkx2da1aipf0q1wzl7v3' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='global_superstore_2016' name='excel-direct.0e9m1eo1idhk0t17hs8kr1pz7i2f'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/RAJKUMAR/Desktop/global_superstore_2016.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0e9m1eo1idhk0t17hs8kr1pz7i2f' name='Orders' table='[Orders$]' type='table'>
          <columns gridOrigin='A1:X10001:no:A1:X10001:0' header='yes' outcome='6'>
            <column datatype='integer' name='Row ID' ordinal='0' />
            <column datatype='string' name='Order ID' ordinal='1' />
            <column datatype='date' name='Order Date' ordinal='2' />
            <column datatype='date' name='Ship Date' ordinal='3' />
            <column datatype='string' name='Ship Mode' ordinal='4' />
            <column datatype='string' name='Customer ID' ordinal='5' />
            <column datatype='string' name='Customer Name' ordinal='6' />
            <column datatype='string' name='Segment' ordinal='7' />
            <column datatype='integer' name='Postal Code' ordinal='8' />
            <column datatype='string' name='City' ordinal='9' />
            <column datatype='string' name='State' ordinal='10' />
            <column datatype='string' name='Country' ordinal='11' />
            <column datatype='string' name='Region' ordinal='12' />
            <column datatype='string' name='Market' ordinal='13' />
            <column datatype='string' name='Product ID' ordinal='14' />
            <column datatype='string' name='Category' ordinal='15' />
            <column datatype='string' name='Sub-Category' ordinal='16' />
            <column datatype='string' name='Product Name' ordinal='17' />
            <column datatype='real' name='Sales' ordinal='18' />
            <column datatype='integer' name='Quantity' ordinal='19' />
            <column datatype='real' name='Discount' ordinal='20' />
            <column datatype='real' name='Profit' ordinal='21' />
            <column datatype='real' name='Shipping Cost' ordinal='22' />
            <column datatype='string' name='Order Priority' ordinal='23' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0e9m1eo1idhk0t17hs8kr1pz7i2f' name='Orders' table='[Orders$]' type='table'>
          <columns gridOrigin='A1:X10001:no:A1:X10001:0' header='yes' outcome='6'>
            <column datatype='integer' name='Row ID' ordinal='0' />
            <column datatype='string' name='Order ID' ordinal='1' />
            <column datatype='date' name='Order Date' ordinal='2' />
            <column datatype='date' name='Ship Date' ordinal='3' />
            <column datatype='string' name='Ship Mode' ordinal='4' />
            <column datatype='string' name='Customer ID' ordinal='5' />
            <column datatype='string' name='Customer Name' ordinal='6' />
            <column datatype='string' name='Segment' ordinal='7' />
            <column datatype='integer' name='Postal Code' ordinal='8' />
            <column datatype='string' name='City' ordinal='9' />
            <column datatype='string' name='State' ordinal='10' />
            <column datatype='string' name='Country' ordinal='11' />
            <column datatype='string' name='Region' ordinal='12' />
            <column datatype='string' name='Market' ordinal='13' />
            <column datatype='string' name='Product ID' ordinal='14' />
            <column datatype='string' name='Category' ordinal='15' />
            <column datatype='string' name='Sub-Category' ordinal='16' />
            <column datatype='string' name='Product Name' ordinal='17' />
            <column datatype='real' name='Sales' ordinal='18' />
            <column datatype='integer' name='Quantity' ordinal='19' />
            <column datatype='real' name='Discount' ordinal='20' />
            <column datatype='real' name='Profit' ordinal='21' />
            <column datatype='real' name='Shipping Cost' ordinal='22' />
            <column datatype='string' name='Order Priority' ordinal='23' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Orders]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:X10001:no:A1:X10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_6E9E327EBE8F4C74A3B0C0DF550211BA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_6E9E327EBE8F4C74A3B0C0DF550211BA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_6E9E327EBE8F4C74A3B0C0DF550211BA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_6E9E327EBE8F4C74A3B0C0DF550211BA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_6E9E327EBE8F4C74A3B0C0DF550211BA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_6E9E327EBE8F4C74A3B0C0DF550211BA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_6E9E327EBE8F4C74A3B0C0DF550211BA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_6E9E327EBE8F4C74A3B0C0DF550211BA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_6E9E327EBE8F4C74A3B0C0DF550211BA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_6E9E327EBE8F4C74A3B0C0DF550211BA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_6E9E327EBE8F4C74A3B0C0DF550211BA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_6E9E327EBE8F4C74A3B0C0DF550211BA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_6E9E327EBE8F4C74A3B0C0DF550211BA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Market</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Market]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Market</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_6E9E327EBE8F4C74A3B0C0DF550211BA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product ID</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_6E9E327EBE8F4C74A3B0C0DF550211BA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_6E9E327EBE8F4C74A3B0C0DF550211BA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_6E9E327EBE8F4C74A3B0C0DF550211BA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_6E9E327EBE8F4C74A3B0C0DF550211BA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_6E9E327EBE8F4C74A3B0C0DF550211BA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_6E9E327EBE8F4C74A3B0C0DF550211BA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_6E9E327EBE8F4C74A3B0C0DF550211BA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_6E9E327EBE8F4C74A3B0C0DF550211BA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Shipping Cost</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Shipping Cost]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Shipping Cost</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_6E9E327EBE8F4C74A3B0C0DF550211BA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Priority</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order Priority]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Priority</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_6E9E327EBE8F4C74A3B0C0DF550211BA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column aggregation='Sum' datatype='integer' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column datatype='integer' name='[Row ID]' role='dimension' type='ordinal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Orders' datatype='table' name='[__tableau_internal_object_id__].[Orders_6E9E327EBE8F4C74A3B0C0DF550211BA]' role='measure' type='quantitative' />
      <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Country:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Myanmar (Burma)&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Democratic Republic of the Congo&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Swaziland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Western Sahara&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;The Gambia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Republic of the Congo&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Macedonia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;French Guiana&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Orders' id='Orders_6E9E327EBE8F4C74A3B0C0DF550211BA'>
            <properties context=''>
              <relation connection='excel-direct.0e9m1eo1idhk0t17hs8kr1pz7i2f' name='Orders' table='[Orders$]' type='table'>
                <columns gridOrigin='A1:X10001:no:A1:X10001:0' header='yes' outcome='6'>
                  <column datatype='integer' name='Row ID' ordinal='0' />
                  <column datatype='string' name='Order ID' ordinal='1' />
                  <column datatype='date' name='Order Date' ordinal='2' />
                  <column datatype='date' name='Ship Date' ordinal='3' />
                  <column datatype='string' name='Ship Mode' ordinal='4' />
                  <column datatype='string' name='Customer ID' ordinal='5' />
                  <column datatype='string' name='Customer Name' ordinal='6' />
                  <column datatype='string' name='Segment' ordinal='7' />
                  <column datatype='integer' name='Postal Code' ordinal='8' />
                  <column datatype='string' name='City' ordinal='9' />
                  <column datatype='string' name='State' ordinal='10' />
                  <column datatype='string' name='Country' ordinal='11' />
                  <column datatype='string' name='Region' ordinal='12' />
                  <column datatype='string' name='Market' ordinal='13' />
                  <column datatype='string' name='Product ID' ordinal='14' />
                  <column datatype='string' name='Category' ordinal='15' />
                  <column datatype='string' name='Sub-Category' ordinal='16' />
                  <column datatype='string' name='Product Name' ordinal='17' />
                  <column datatype='real' name='Sales' ordinal='18' />
                  <column datatype='integer' name='Quantity' ordinal='19' />
                  <column datatype='real' name='Discount' ordinal='20' />
                  <column datatype='real' name='Profit' ordinal='21' />
                  <column datatype='real' name='Shipping Cost' ordinal='22' />
                  <column datatype='string' name='Order Priority' ordinal='23' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='SalesTargets (P1-AmazingMartEU2)' inline='true' name='federated.1qdp9x10yrygnc18iw4gh11wicsv' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='P1-AmazingMartEU2' name='excel-direct.0ljethj0lh4ef8120gatc14ogxau'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/RAJKUMAR/Downloads/Unit-5.twb Files/Data/Tableau/P1-AmazingMartEU2.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0ljethj0lh4ef8120gatc14ogxau' name='SalesTargets' table='[SalesTargets$]' type='table'>
          <columns gridOrigin='A1:C145:no:A1:C145:0' header='yes' outcome='6'>
            <column datatype='date' name='Month of Order Date' ordinal='0' />
            <column datatype='string' name='Category' ordinal='1' />
            <column datatype='integer' name='Target' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0ljethj0lh4ef8120gatc14ogxau' name='SalesTargets' table='[SalesTargets$]' type='table'>
          <columns gridOrigin='A1:C145:no:A1:C145:0' header='yes' outcome='6'>
            <column datatype='date' name='Month of Order Date' ordinal='0' />
            <column datatype='string' name='Category' ordinal='1' />
            <column datatype='integer' name='Target' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[SalesTargets]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C145:no:A1:C145:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Month of Order Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Month of Order Date]</local-name>
            <parent-name>[SalesTargets]</parent-name>
            <remote-alias>Month of Order Date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[SalesTargets]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Target</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Target]</local-name>
            <parent-name>[SalesTargets]</parent-name>
            <remote-alias>Target</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='Migrated Data' datatype='table' name='[__tableau_internal_object_id__].[Migrated Data]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Migrated Data' id='Migrated Data'>
            <properties context=''>
              <relation connection='excel-direct.0ljethj0lh4ef8120gatc14ogxau' name='SalesTargets' table='[SalesTargets$]' type='table'>
                <columns gridOrigin='A1:C145:no:A1:C145:0' header='yes' outcome='6'>
                  <column datatype='date' name='Month of Order Date' ordinal='0' />
                  <column datatype='string' name='Category' ordinal='1' />
                  <column datatype='integer' name='Target' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='ListOfOrders+ OrderBreakDown' inline='true' name='federated.0te67hi1f0vsjr0zt2kp6050n671' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='P1-AmazingMartEU2' name='excel-direct.11ih6fp094i9sp1b7z1z11lcgoqv'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/RAJKUMAR/Downloads/Unit-5.twb Files/Data/Tableau/P1-AmazingMartEU2.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[ListOfOrders].[Order ID]' />
              <expression op='[OrderBreakdown].[Order ID]' />
            </expression>
          </clause>
          <relation connection='excel-direct.11ih6fp094i9sp1b7z1z11lcgoqv' name='ListOfOrders' table='[ListOfOrders$]' type='table'>
            <columns gridOrigin='A1:J4118:no:A1:J4118:0' header='yes' outcome='6'>
              <column datatype='string' name='Order ID' ordinal='0' />
              <column datatype='date' name='Order Date' ordinal='1' />
              <column datatype='string' name='Customer Name' ordinal='2' />
              <column datatype='string' name='City' ordinal='3' />
              <column datatype='string' name='Country' ordinal='4' />
              <column datatype='string' name='Region' ordinal='5' />
              <column datatype='string' name='Segment' ordinal='6' />
              <column datatype='date' name='Ship Date' ordinal='7' />
              <column datatype='string' name='Ship Mode' ordinal='8' />
              <column datatype='string' name='State' ordinal='9' />
            </columns>
          </relation>
          <relation connection='excel-direct.11ih6fp094i9sp1b7z1z11lcgoqv' name='OrderBreakdown' table='[OrderBreakdown$]' type='table'>
            <columns gridOrigin='A1:H8048:no:A1:H8048:0' header='yes' outcome='6'>
              <column datatype='string' name='Order ID' ordinal='0' />
              <column datatype='string' name='Product Name' ordinal='1' />
              <column datatype='real' name='Discount' ordinal='2' />
              <column datatype='integer' name='Sales' ordinal='3' />
              <column datatype='integer' name='Profit' ordinal='4' />
              <column datatype='integer' name='Quantity' ordinal='5' />
              <column datatype='string' name='Category' ordinal='6' />
              <column datatype='string' name='Sub-Category' ordinal='7' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[ListOfOrders].[Order ID]' />
              <expression op='[OrderBreakdown].[Order ID]' />
            </expression>
          </clause>
          <relation connection='excel-direct.11ih6fp094i9sp1b7z1z11lcgoqv' name='ListOfOrders' table='[ListOfOrders$]' type='table'>
            <columns gridOrigin='A1:J4118:no:A1:J4118:0' header='yes' outcome='6'>
              <column datatype='string' name='Order ID' ordinal='0' />
              <column datatype='date' name='Order Date' ordinal='1' />
              <column datatype='string' name='Customer Name' ordinal='2' />
              <column datatype='string' name='City' ordinal='3' />
              <column datatype='string' name='Country' ordinal='4' />
              <column datatype='string' name='Region' ordinal='5' />
              <column datatype='string' name='Segment' ordinal='6' />
              <column datatype='date' name='Ship Date' ordinal='7' />
              <column datatype='string' name='Ship Mode' ordinal='8' />
              <column datatype='string' name='State' ordinal='9' />
            </columns>
          </relation>
          <relation connection='excel-direct.11ih6fp094i9sp1b7z1z11lcgoqv' name='OrderBreakdown' table='[OrderBreakdown$]' type='table'>
            <columns gridOrigin='A1:H8048:no:A1:H8048:0' header='yes' outcome='6'>
              <column datatype='string' name='Order ID' ordinal='0' />
              <column datatype='string' name='Product Name' ordinal='1' />
              <column datatype='real' name='Discount' ordinal='2' />
              <column datatype='integer' name='Sales' ordinal='3' />
              <column datatype='integer' name='Profit' ordinal='4' />
              <column datatype='integer' name='Quantity' ordinal='5' />
              <column datatype='string' name='Category' ordinal='6' />
              <column datatype='string' name='Sub-Category' ordinal='7' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[Category]' value='[OrderBreakdown].[Category]' />
          <map key='[City]' value='[ListOfOrders].[City]' />
          <map key='[Country]' value='[ListOfOrders].[Country]' />
          <map key='[Customer Name]' value='[ListOfOrders].[Customer Name]' />
          <map key='[Discount]' value='[OrderBreakdown].[Discount]' />
          <map key='[Order Date]' value='[ListOfOrders].[Order Date]' />
          <map key='[Order ID (OrderBreakdown)]' value='[OrderBreakdown].[Order ID]' />
          <map key='[Order ID]' value='[ListOfOrders].[Order ID]' />
          <map key='[Product Name]' value='[OrderBreakdown].[Product Name]' />
          <map key='[Profit]' value='[OrderBreakdown].[Profit]' />
          <map key='[Quantity]' value='[OrderBreakdown].[Quantity]' />
          <map key='[Region]' value='[ListOfOrders].[Region]' />
          <map key='[Sales]' value='[OrderBreakdown].[Sales]' />
          <map key='[Segment]' value='[ListOfOrders].[Segment]' />
          <map key='[Ship Date]' value='[ListOfOrders].[Ship Date]' />
          <map key='[Ship Mode]' value='[ListOfOrders].[Ship Mode]' />
          <map key='[State]' value='[ListOfOrders].[State]' />
          <map key='[Sub-Category]' value='[OrderBreakdown].[Sub-Category]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[ListOfOrders]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:J4118:no:A1:J4118:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[OrderBreakdown]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:H8048:no:A1:H8048:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[ListOfOrders]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[ListOfOrders]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[ListOfOrders]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[ListOfOrders]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[ListOfOrders]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[ListOfOrders]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[ListOfOrders]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[ListOfOrders]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>7</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[ListOfOrders]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[ListOfOrders]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID (OrderBreakdown)]</local-name>
            <parent-name>[OrderBreakdown]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[OrderBreakdown]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[OrderBreakdown]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[OrderBreakdown]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[OrderBreakdown]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[OrderBreakdown]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[OrderBreakdown]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[OrderBreakdown]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='ExcessOfTarget' datatype='integer' name='[Calculation_54395090618413056]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Sales])-SUM([federated.1qdp9x10yrygnc18iw4gh11wicsv].[Target])' />
      </column>
      <column datatype='string' name='[Category]' role='dimension' type='nominal' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Migrated Data' datatype='table' name='[__tableau_internal_object_id__].[Migrated Data]' role='measure' type='quantitative' />
      <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
      <drill-paths>
        <drill-path name='Country, State, City'>
          <field>[Country]</field>
          <field>[State]</field>
          <field>[City]</field>
        </drill-path>
      </drill-paths>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Category:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Furniture&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Technology&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Office Supplies&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <datasource-dependencies datasource='federated.1qdp9x10yrygnc18iw4gh11wicsv'>
        <column datatype='integer' name='[Target]' role='measure' type='quantitative' />
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Migrated Data' id='Migrated Data'>
            <properties context=''>
              <relation join='inner' type='join'>
                <clause type='join'>
                  <expression op='='>
                    <expression op='[ListOfOrders].[Order ID]' />
                    <expression op='[OrderBreakdown].[Order ID]' />
                  </expression>
                </clause>
                <relation connection='excel-direct.11ih6fp094i9sp1b7z1z11lcgoqv' name='ListOfOrders' table='[ListOfOrders$]' type='table'>
                  <columns gridOrigin='A1:J4118:no:A1:J4118:0' header='yes' outcome='6'>
                    <column datatype='string' name='Order ID' ordinal='0' />
                    <column datatype='date' name='Order Date' ordinal='1' />
                    <column datatype='string' name='Customer Name' ordinal='2' />
                    <column datatype='string' name='City' ordinal='3' />
                    <column datatype='string' name='Country' ordinal='4' />
                    <column datatype='string' name='Region' ordinal='5' />
                    <column datatype='string' name='Segment' ordinal='6' />
                    <column datatype='date' name='Ship Date' ordinal='7' />
                    <column datatype='string' name='Ship Mode' ordinal='8' />
                    <column datatype='string' name='State' ordinal='9' />
                  </columns>
                </relation>
                <relation connection='excel-direct.11ih6fp094i9sp1b7z1z11lcgoqv' name='OrderBreakdown' table='[OrderBreakdown$]' type='table'>
                  <columns gridOrigin='A1:H8048:no:A1:H8048:0' header='yes' outcome='6'>
                    <column datatype='string' name='Order ID' ordinal='0' />
                    <column datatype='string' name='Product Name' ordinal='1' />
                    <column datatype='real' name='Discount' ordinal='2' />
                    <column datatype='integer' name='Sales' ordinal='3' />
                    <column datatype='integer' name='Profit' ordinal='4' />
                    <column datatype='integer' name='Quantity' ordinal='5' />
                    <column datatype='string' name='Category' ordinal='6' />
                    <column datatype='string' name='Sub-Category' ordinal='7' />
                  </columns>
                </relation>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <datasource-relationships>
    <datasource-dependencies datasource='federated.0te67hi1f0vsjr0zt2kp6050n671'>
      <column datatype='string' name='[Category]' role='dimension' type='nominal' />
      <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
      <column-instance column='[Order Date]' derivation='Month' name='[mn:Order Date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
      <column-instance column='[Order Date]' derivation='Month-Trunc' name='[tmn:Order Date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Order Date]' derivation='Year-Trunc' name='[tyr:Order Date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
    </datasource-dependencies>
    <datasource-dependencies datasource='federated.1qdp9x10yrygnc18iw4gh11wicsv'>
      <column datatype='string' name='[Category]' role='dimension' type='nominal' />
      <column datatype='date' name='[Month of Order Date]' role='dimension' type='ordinal' />
      <column-instance column='[Month of Order Date]' derivation='Month' name='[mn:Month of Order Date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
      <column-instance column='[Month of Order Date]' derivation='Month-Trunc' name='[tmn:Month of Order Date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Month of Order Date]' derivation='Year-Trunc' name='[tyr:Month of Order Date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Month of Order Date]' derivation='Year' name='[yr:Month of Order Date:ok]' pivot='key' type='ordinal' />
    </datasource-dependencies>
    <datasource-relationship source='federated.0te67hi1f0vsjr0zt2kp6050n671' target='federated.1qdp9x10yrygnc18iw4gh11wicsv'>
      <column-mapping>
        <map key='[federated.0te67hi1f0vsjr0zt2kp6050n671].[mn:Order Date:ok]' value='[federated.1qdp9x10yrygnc18iw4gh11wicsv].[mn:Month of Order Date:ok]' />
        <map key='[federated.0te67hi1f0vsjr0zt2kp6050n671].[none:Category:nk]' value='[federated.1qdp9x10yrygnc18iw4gh11wicsv].[none:Category:nk]' />
        <map key='[federated.0te67hi1f0vsjr0zt2kp6050n671].[tmn:Order Date:ok]' value='[federated.1qdp9x10yrygnc18iw4gh11wicsv].[tmn:Month of Order Date:ok]' />
        <map key='[federated.0te67hi1f0vsjr0zt2kp6050n671].[tyr:Order Date:ok]' value='[federated.1qdp9x10yrygnc18iw4gh11wicsv].[tyr:Month of Order Date:ok]' />
        <map key='[federated.0te67hi1f0vsjr0zt2kp6050n671].[yr:Order Date:ok]' value='[federated.1qdp9x10yrygnc18iw4gh11wicsv].[yr:Month of Order Date:ok]' />
      </column-mapping>
    </datasource-relationship>
  </datasource-relationships>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Choropleth Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='global_superstore_2016' name='federated.09ed1vq0jkx2da1aipf0q1wzl7v3' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.09ed1vq0jkx2da1aipf0q1wzl7v3'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.09ed1vq0jkx2da1aipf0q1wzl7v3].[sum:Sales:qk]' palette='orange_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.09ed1vq0jkx2da1aipf0q1wzl7v3].[none:Country:nk]' />
              <color column='[federated.09ed1vq0jkx2da1aipf0q1wzl7v3].[sum:Sales:qk]' />
              <text column='[federated.09ed1vq0jkx2da1aipf0q1wzl7v3].[sum:Sales:qk]' />
              <geometry column='[federated.09ed1vq0jkx2da1aipf0q1wzl7v3].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.09ed1vq0jkx2da1aipf0q1wzl7v3].[Latitude (generated)]</rows>
        <cols>[federated.09ed1vq0jkx2da1aipf0q1wzl7v3].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{8C0C89BA-A604-4AB0-BE6F-8400E1E67FA3}' />
    </worksheet>
    <worksheet name='Geographic Roles'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Sum of Profit</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='global_superstore_2016' name='federated.09ed1vq0jkx2da1aipf0q1wzl7v3' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.09ed1vq0jkx2da1aipf0q1wzl7v3'>
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.09ed1vq0jkx2da1aipf0q1wzl7v3].[none:State:nk]' />
              <color column='[federated.09ed1vq0jkx2da1aipf0q1wzl7v3].[sum:Profit:qk]' />
              <text column='[federated.09ed1vq0jkx2da1aipf0q1wzl7v3].[sum:Profit:qk]' />
              <geometry column='[federated.09ed1vq0jkx2da1aipf0q1wzl7v3].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.09ed1vq0jkx2da1aipf0q1wzl7v3].[Latitude (generated)]</rows>
        <cols>[federated.09ed1vq0jkx2da1aipf0q1wzl7v3].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{FCEC008F-02D6-42C6-B610-CC1A29AD720F}' />
    </worksheet>
    <worksheet name='Placing Marks On Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='global_superstore_2016' name='federated.09ed1vq0jkx2da1aipf0q1wzl7v3' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.09ed1vq0jkx2da1aipf0q1wzl7v3'>
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.09ed1vq0jkx2da1aipf0q1wzl7v3].[none:State:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.09ed1vq0jkx2da1aipf0q1wzl7v3].[Latitude (generated)]</rows>
        <cols>[federated.09ed1vq0jkx2da1aipf0q1wzl7v3].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{FE422B62-CFFC-4FBD-AED4-FF4DCA06E94A}' />
    </worksheet>
    <worksheet name='Sheet 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='ListOfOrders+ OrderBreakDown' name='federated.0te67hi1f0vsjr0zt2kp6050n671' />
            <datasource caption='SalesTargets (P1-AmazingMartEU2)' name='federated.1qdp9x10yrygnc18iw4gh11wicsv' />
          </datasources>
          <datasource-dependencies datasource='federated.0te67hi1f0vsjr0zt2kp6050n671'>
            <column caption='ExcessOfTarget' datatype='integer' name='[Calculation_54395090618413056]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Sales])-SUM([federated.1qdp9x10yrygnc18iw4gh11wicsv].[Target])' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Month-Trunc' name='[tmn:Order Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_54395090618413056]' derivation='User' name='[usr:Calculation_54395090618413056:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1qdp9x10yrygnc18iw4gh11wicsv'>
            <column datatype='integer' name='[Target]' role='measure' type='quantitative' />
            <column-instance column='[Target]' derivation='Sum' name='[sum:Target:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0te67hi1f0vsjr0zt2kp6050n671].[none:Category:nk]'>
            <groupfilter function='member' level='[none:Category:nk]' member='&quot;Technology&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0te67hi1f0vsjr0zt2kp6050n671].[none:Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0te67hi1f0vsjr0zt2kp6050n671].[sum:Sales:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='display' class='0' field='[federated.0te67hi1f0vsjr0zt2kp6050n671].[sum:Sales:qk]' scope='rows' value='false' />
            <format attr='title' class='0' field='[federated.1qdp9x10yrygnc18iw4gh11wicsv].[sum:Target:qk]' scope='rows' value='Sales / Target' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0te67hi1f0vsjr0zt2kp6050n671].[tmn:Order Date:qk]' value='213' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-weight' value='bold' />
            <format attr='font-size' value='10' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.2083977460861206' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='760' />
                <format attr='maxwidth' value='760' />
                <format attr='minheight' value='227' />
                <format attr='maxheight' value='227' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0te67hi1f0vsjr0zt2kp6050n671].[sum:Sales:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0te67hi1f0vsjr0zt2kp6050n671].[none:Category:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.1314364671707153' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1qdp9x10yrygnc18iw4gh11wicsv].[sum:Target:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.0te67hi1f0vsjr0zt2kp6050n671].[none:Category:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.2083977460861206' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0te67hi1f0vsjr0zt2kp6050n671].[usr:Calculation_54395090618413056:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0te67hi1f0vsjr0zt2kp6050n671].[usr:Calculation_54395090618413056:qk]' />
              <lod column='[federated.0te67hi1f0vsjr0zt2kp6050n671].[none:Category:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.2083977460861206' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='760' />
                <format attr='maxwidth' value='760' />
                <format attr='minheight' value='227' />
                <format attr='maxheight' value='227' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1qdp9x10yrygnc18iw4gh11wicsv].[sum:Target:qk] + ([federated.0te67hi1f0vsjr0zt2kp6050n671].[sum:Sales:qk] + [federated.0te67hi1f0vsjr0zt2kp6050n671].[usr:Calculation_54395090618413056:qk]))</rows>
        <cols>[federated.0te67hi1f0vsjr0zt2kp6050n671].[tmn:Order Date:qk]</cols>
      </table>
      <simple-id uuid='{5CFEAE8F-90DD-4D50-A266-31FB791DEDCB}' />
    </worksheet>
    <worksheet name='overlaying demographic data'>
      <table>
        <view>
          <datasources>
            <datasource caption='global_superstore_2016' name='federated.09ed1vq0jkx2da1aipf0q1wzl7v3' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.09ed1vq0jkx2da1aipf0q1wzl7v3'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.09ed1vq0jkx2da1aipf0q1wzl7v3].[Longitude (generated)]' field-type='quantitative' max='4745832.0205677673' min='-4815077.168831449' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.09ed1vq0jkx2da1aipf0q1wzl7v3].[Latitude (generated)]' field-type='quantitative' max='9333197.7815515399' min='2625140.6563802268' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='1' field='[federated.09ed1vq0jkx2da1aipf0q1wzl7v3].[Longitude (generated)]' field-type='quantitative' fold='true' max='4745832.0205677673' min='-4815077.168831449' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.09ed1vq0jkx2da1aipf0q1wzl7v3].[sum:Sales:qk]' palette='blue_teal_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <lod column='[federated.09ed1vq0jkx2da1aipf0q1wzl7v3].[none:State:nk]' />
              <lod column='[federated.09ed1vq0jkx2da1aipf0q1wzl7v3].[none:Country:nk]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.09ed1vq0jkx2da1aipf0q1wzl7v3].[Longitude (generated)]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.09ed1vq0jkx2da1aipf0q1wzl7v3].[none:State:nk]' />
              <lod column='[federated.09ed1vq0jkx2da1aipf0q1wzl7v3].[none:Country:nk]' />
              <color column='[federated.09ed1vq0jkx2da1aipf0q1wzl7v3].[sum:Sales:qk]' />
              <geometry column='[federated.09ed1vq0jkx2da1aipf0q1wzl7v3].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.9670165777206421' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.09ed1vq0jkx2da1aipf0q1wzl7v3].[Longitude (generated)]' x-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.09ed1vq0jkx2da1aipf0q1wzl7v3].[none:State:nk]' />
              <lod column='[federated.09ed1vq0jkx2da1aipf0q1wzl7v3].[none:Country:nk]' />
              <size column='[federated.09ed1vq0jkx2da1aipf0q1wzl7v3].[sum:Sales:qk]' />
              <color column='[federated.09ed1vq0jkx2da1aipf0q1wzl7v3].[none:Category:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2.1104972362518311' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.09ed1vq0jkx2da1aipf0q1wzl7v3].[Latitude (generated)]</rows>
        <cols>([federated.09ed1vq0jkx2da1aipf0q1wzl7v3].[Longitude (generated)] + [federated.09ed1vq0jkx2da1aipf0q1wzl7v3].[Longitude (generated)])</cols>
      </table>
      <simple-id uuid='{A47A2EA4-A8CB-4F31-9107-2F05DD43DF98}' />
    </worksheet>
    <worksheet name='using polygon shapes'>
      <table>
        <view>
          <datasources />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{AC5DE54F-8284-40C6-B122-40FA005596A1}' />
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.25' source-height='89'>
    <window class='worksheet' name='Geographic Roles'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.09ed1vq0jkx2da1aipf0q1wzl7v3].[sum:Profit:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.09ed1vq0jkx2da1aipf0q1wzl7v3].[none:State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D47A97F4-777D-4876-92D0-98623AFD0039}' />
    </window>
    <window class='worksheet' name='Placing Marks On Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.09ed1vq0jkx2da1aipf0q1wzl7v3].[none:State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F2DDD88B-6A45-4301-A4B7-9D64CCFBC957}' />
    </window>
    <window class='worksheet' name='overlaying demographic data'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.09ed1vq0jkx2da1aipf0q1wzl7v3].[sum:Sales:qk]' type='color' />
            <card pane-specification-id='2' param='[federated.09ed1vq0jkx2da1aipf0q1wzl7v3].[sum:Sales:qk]' type='size' />
            <card pane-specification-id='2' param='[federated.09ed1vq0jkx2da1aipf0q1wzl7v3].[none:Category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.09ed1vq0jkx2da1aipf0q1wzl7v3].[none:Category:nk]</field>
            <field>[federated.09ed1vq0jkx2da1aipf0q1wzl7v3].[none:Country:nk]</field>
            <field>[federated.09ed1vq0jkx2da1aipf0q1wzl7v3].[none:Region:nk]</field>
            <field>[federated.09ed1vq0jkx2da1aipf0q1wzl7v3].[none:State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D2FF08D9-938A-4CE8-80B4-E73A90477BED}' />
    </window>
    <window class='worksheet' name='Choropleth Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.09ed1vq0jkx2da1aipf0q1wzl7v3].[sum:Sales:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.09ed1vq0jkx2da1aipf0q1wzl7v3].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{44A079D7-1A64-4C84-B528-8DE9CA07752F}' />
    </window>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[federated.0te67hi1f0vsjr0zt2kp6050n671].[none:Category:nk]' type='color' />
            <card pane-specification-id='3' param='[federated.0te67hi1f0vsjr0zt2kp6050n671].[usr:Calculation_54395090618413056:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[federated.0te67hi1f0vsjr0zt2kp6050n671].[none:Category:nk]' show-all='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <axis>[federated.1qdp9x10yrygnc18iw4gh11wicsv].[sum:Target:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0te67hi1f0vsjr0zt2kp6050n671].[none:Category:nk]</field>
            <field>[federated.0te67hi1f0vsjr0zt2kp6050n671].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DFABBF1F-EAA8-4A19-9AA1-910A801F41FD}' />
    </window>
    <window class='worksheet' maximized='true' name='using polygon shapes'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{D4CD5456-A407-43FE-BDC0-46C6BC61F695}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Choropleth Map' width='192'>
      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
      /x91F+l8OdsqUwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Geographic Roles' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Placing Marks On Map' width='192'>
      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
      /f8ObNsCXxziKwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
      K5QAolhjAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='overlaying demographic data' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nOy9Z5Bc2XWg+T2X3puqLO8NTMG79s2mZ7MpSpRWI8qsUWhnZzURszsxMbGz
      +0c7Mb/2x8zEarS7o52VpyhHkSJFNsludjdMoxseKADlvc+qrPTuvXxmf2RVoqpRaDbBdkDn
      F1EBVOLZxDn33mPuOYJlWRZ16nxCET/qB6hT56NE3v6LZVnUJ4M6nzRqCmCaJpubm4jivUlB
      FEUURUFVVQDcbjeCIHz4T/khoqoqgiAgSRK6rmOz2SiVSmiaVjtm53ewc9AQBAFBEGrfocvl
      2vV91nl48vk8uq7Xfrfb7ei6jmEYAGQyGVwuF7IsP+gSe7LraFEU71MAQRBwOBxomoYsyyiK
      8vO8x8ceu92+52flcpl8Po9lWTVBh+rAsY3D4cDr9e5SkMd9wPigKJVKKIqCKIrouo4syxiG
      gSAINRk0TRNBENB1nXK5jM/n+5nv867qYppmbeSz2Ww/s3Y9iuwlsNuDgCAIqKqKYRg1wd8+
      XlEUvF5vfcT/ObEsC9M0qVQqlEolbDYbuq4jSRI2mw273Y6qqrVViSAIbG5uEgqFHup+70mi
      7XZ7TQA+qYiiiMPhwG63YxgGmqbVRiRRFLHb7XXh/zmxLAtVVRFFEUmSsCyLYrGIZVkoioIs
      y1QqFUzTrM3E2+c9rGy+JwWQZRlJkh7qBo8TO9f4j/tS8KNkW/C3Z1nLstA0jUqlUnPW7FyG
      Gobx0PL5wCHL6XQC7Fpz1anzQbEt2JZlkcvldgn/9s/Okf+ddtbDejAfOAOoqlqb8j/JS586
      HzzbS8pisbinML/zs3fKoyiKGIbxUDbqA88wTRPTNGueoDp1Pggsy6JUKlEoFGqfSZKEKIo1
      L8/2cfBgJ4WiKA81C9ynAE6nE0VR0DTtE2/41vlgsSyLSqWCoih4PB4KhQKWZdV8+ztHfkEQ
      GJ0Yp1Kp4HA48Hm8NMViu671MNynAOVyGagqQl3463xQWJZFPp9HVdXa2h7ujfDvXPYkUyny
      Tgl/RyOmYTC7tIrL5cLv8+2Kxfys3BcIs9lsD32xOh89e62fP24YhlFzIe8l/Ol0mkwui2ma
      hAJBAoEAuXwOQRSRZBlJlol0tTM8NkWzN4CAgKZpDyW7wnY2qGEYpFIpRFHE6XTWvEB1Hi0M
      w6itpx0Ox8dqQMvn89jtdjKZTE34dwYUTdMkvr7OXCGFw+dBEETK2RxWrojlshPtbNt1PdM0
      KeXyZNc3iSkuerq7f+Zn2tMIrlQqdQV4BNnpL3e73R8r97VlWbz6+ms0Rhvo6e7e5c8HWIvH
      mVhewBbyEe1orZ3j9nsf6OYURRG330dF1VAqDxeE3FMBtg2RevDr0WM7ZeWdvvKPmnQmw9jo
      KCNjY4yMjuAK+PH6fBhlFdMmk0in6Dt+CJvDcd+5P83ALReK+CPND/Vc9dj9Y8R2Fqssyx+7
      tIxbt26RL5XoOnYI1SYzPj7O9MI8Ca1IsL8LbyREdjOFoRs/87Ur5fJDz3b3zQCCIGC32+uj
      /yPMx230BzB0nWA0QqipkVhXB30nj2BzOJAkiXK5TLi5ieXpGZLrG3QeGESSpJqhvJ0XtD0T
      bP+5nSHqcLvI5fMP5bm8b5iwLKsu/I84H8fNTU1NTVgllbsX3iY+v4Dd6azNUqIoIkgikdZm
      REliYXSCSqVSE3zDMNB1HcE0cRbTtQCZpmmIoki0vZWpzAajE+O1+73X9/94zZN13hc+bjPA
      tnGuWSaiLNPQXjVyTcNg6sYwoigyc/MOoiDS2NGOWlZrdowsyzVjWQSkYmZXtuj2ezb1dJIW
      dHK5XO2e216md1OGB0aC69R5P1laXsa0TAZPHyeT2KScL+DweFibmcfUddJr63gCfkzToHNf
      f03wgV3yWGrsRqbqAn2nnKql8s/svdw1A9TTfOt8EJTLZUZGRrDZbNx65SyJ+SWMYpnVH18g
      2tVDfG6R9v0DNPd20djRxp0Ll8il0u96zZ27FyuqxvTwXciXaglxOyPK75wNd2aW7lIA0zR3
      7busU0fTtF37oR8Gp9PJwQMHKKsqvaeOsu+p0/RHw/QnciR0Px0HBom0NqGVykzfukP/icMk
      V+PMj46ja5Wfev2KpiEIAr72ZhKbmwC1fRt7Cf9OY/o+G+DjFDms89GiaRp/9/ffYnRs9Oe6
      jmmaWEAhlWZzaYXpm7fRmmI4f/FTHDnYQEt/L7LNxuL4JP3HDhOIRmgb7KOxo52pW3cwjXfP
      9XF5PWiqSqCpgbnsJvl8/j0/230K8HEynup8dCSTSb7xV3/F6OgYAX/g57qWKIpomoaFQHx+
      kfj8IoYAZm8XTodEIZNBK1WTMO1bgTBBEHC4nDR3dzA/Os7dt66wvrBUzSBVNVam57DMe8at
      PxIms5ki0NbE+Oz0Aw3fnTPDtmFdw+Px1BWgDpZlMTc/z+TUJCdPnCAajf7c1+zv60MUwOn1
      4AsF0TWNmZu3GX7tPGuz8zi9HhS7HcvaPdp7Q0HsTicev4/1xWXKhSIXvv19yqUi8fnF2nG+
      UJBUfL1qG4T9LC4vv+vz7KkAdepAdclya3gYJAlJkt6XvLBQKIRitxOMNSApCvN3xjBUDbvH
      Td/xIwBUyiqCKMI7dn8193TSsX+ArqH9TN64TayrnY7BfkrFAmqpBEB6I0GgIQKArzHCOiqj
      Y2NUKg+2Ifa0Aep8sikUi2QyGZ584glk08LzPhVDi0QitDW3oMWT5DcSLI9P4W2I4I+EEQSB
      fCqNXiiSHJ8lOzpLZmSG5Py9Udy3eg2v2053RyuNbh+yJBBtbWF1dqG63LEspB0eoGCskZRi
      Mj458cDlkGEY760qRJ1PDm6XC7fLRSgUIhKNcPTYsfflurIs4/N5GZmYQJEkWg8M0NDRhkA1
      TaIST/Kl516oOWFM02R+cYFUIokvEkL1t2GJMqG3r+HcuIDZ8JtYDYeYHxknu5mikMnS3NOF
      gEUpmcUR8tPY2c7i3XFKpRIul+u+ZxJFsa4AdR7Ml1/8Mh63+325liAI5AsF7E4HiqxQLpaY
      uHIDl8+DrlZ49sDhXcIP0NbSytqdW5hBP6qrAb1SYUJRaG1owu3vAsAT8LG5ukbPkaFq2jQW
      JWQcW/eU7LYHJgbWbYA670p3V9f7mlUaa2gkl0pTLOQRJAlBqi6tCtksI9OTFAqFXdsbRVGk
      s7GZVHyDfDLN7Ns3GIvHkV76XUy7t+bTb2hr2ZG/JhAM3VNaSZYeGNuSJKmuAHWq7Ky/A5BK
      pd73hLqW1lbcQT/RzjaWxidRCyXaBvtwuF04OmIsrNzvuWloaKC8kWJjfpEj+w4w2NtPOr4B
      bJXuLKm4/Q+uCSopCqqm7vpMFEVKpRJ3xsfqS6A61UK05y9coCkWo7GxkYaGBoLB4Pt6j3Q6
      jVouIyCQml9GFgQizTGK2RzeoB/FZmczl92zzOHR/kF03SDg9/Pss89weXoMoFbBWyuXUXaU
      ptz+07IszJKKu9ED3HN9Ts3OspBcp3l/f30GeNwxTbNW6WMvDMPg1vAww8PDXL169X0X/G38
      fj+yItPV3EpXZxfoOjGhjGkYiJKMJEsYdnmX23JbGTxuDwG/H1EUaW5qRsyVGb98nXKhiKkb
      jLx1lbsXL7MwNgG8Iw2irGHfsi0EQaBSqbCSS9J+eD/uSrKuAI872xucHkQymeTK5DjZbJah
      oaEPrAK4IAgcO3qM5559lsXFRTqbYrguv87K2ATBxmqgLdzRwsj0JGvxOKVSianZGXRdrxVq
      8Pv92O12+jq72JxfZvTydWwOO4eff5rBU8dRi2WMik5mM8ntNy8xcvk6xWyu9gymabK4tIhh
      mliGjnNzsr4Eetz5aT58VdPIr8YJRyL09fV9oJkAoihSLJWI7e9DLZVYOfJL+Epl7M5q+oPD
      pkBHE6vZHGNj89h9XnJ37/D8M8/i3LGBZmhoiJX1OEmrQqSlqbpvQFGItDSxNr9IKZdn36nj
      CKLI6vg0qqricrkwTZO21jZCoTCTMwtY3U/UFeCTRKlcxtB1HA7HLoO3s72N/YP7HqrBxMM8
      Q9tgHzang7W5RcQt742kanjOX8D67KexOez4GyJsrsbZnFveJfxQjSk0NzfjckkoO2a3cKxa
      NMuo6LUyK6H2Zt68cY1nT5xCURQkScLn9TLQ2sHI2NTuukDbZefqPPpYlsXi8jIBnw+fz1ct
      S3L+PMOjI/hcLoJNMTTLxLLZsPQKnxs6SkNDwwf+XLqu86M3z6E0BEEQWBybZPDkUWB3NbiK
      qjJ+7hK//sv/FR6P577rzMzOMpHfxBO8l6i3vUsMdnfu2Zxd4Kl9h3a5Q7fvVZ8BHkMqlQrX
      bw8zmdzgiZ4BfFvlA6fnZuh75gkkSULa0WYoN7eA1+v9UJ5NlmWePnKcN69doagIuLz3hHtb
      ePVKheziGr/04ku4HxCIk0SRySs38Mca6BraXyumK6Yz5BQnLpeyfVE8SPe5dLd/rxvBjxmV
      SoW/+c63uTE3Q2JuAftW1eRLly8jej3V/bTbwm8YWPEEnz9x+kMthOb3+/ncs88zGIqxNjHD
      2txCtVyibrA4NsnqnQmePHCYSCTyQJukvb0dpyCxND6FtbW7y7Is/DfOk5iaBkDXNNYmZujt
      6ETX9V2xju2f+gzwiPPOupqlUolkIY8hCoRdblpaWjAMg5mZGaIHBpBtNizLQlc1SCR54cQp
      3HvkyXzQyLJMf38/mVyWWzduUljZwOP10B4Ic/Dk/p9qjwiCQHdnF/GrG9UM0i0yz3yGTkFk
      czVOaWWdp0+dQdqaHfZ8jvf1rep86CwtLdHc3FxLBZBlGUplHJLM57/6IqZp8p3vfpdEMU9u
      aprOo4epqBqj5y5wYmAfjndxkX7Q2BSFp848wVNnnnio84cOHmRmdQnTNGvvb0jV9zG0Ckf3
      H8TldFLaSpl+J5Ik1RXgUScWi9X+83P5PN/+zrdpa27h0y+8wNTMDE6nk5yh0/fcM2yvJkxD
      x9R1dF3n1TcvUDFNHDYFEQHd0PF7fZw8dPhjVV1up9dq+7kCgQBehwujUjVud9az0oolHA7H
      A4UfqvZPXQEecbareFiWxcbGBktrcb56/ASv/OQnzKyt8ubFNymbJp50Gm8kDEB2fQPZZiPj
      tuMKBZEUhYplYVEVrsXEJu3xOE1NTR/hm91ju3tkqVTCbrfXUpsVReGJEyf5/oU38AQDdA3t
      B6oeTZcov6eg3sdHxev8XAiCQFtrK06ng6amJnw+HzaPm81kikqpTGJxqXZstLODAy88hy/W
      iGyzVXNkdpQZEfJFIpHIR/Uqu9guYVIoFNC3Zq2dhEIhFBMym0lmhu+iaxrJmQX2d/U88Ho7
      6w3VFeAxQpIkFEHA5XTy6U99isGWavZloZDftZzZzpXZi3K+QG9D40deH8qyrGqim6aRz+dr
      Ruw7n8vj8XD88BF6jxykpa+bG6+fJyAoez7/OzNebTZbXQEeJxaXlmhqjKEoCslkkkI2x+H+
      QbyBAK7ge6vsoGazNDXGfvqBHyC6rpNOpymVSpRKpVpdou2G5O9kf/8AaiqLw+Wk59ABSn4H
      t8fH7jtur1hAXQEeEyzLIpvN8qUvfQlRFAmHw5w8fhzd0BEddlw+H1NXrr1rjr+h6wRFmUg4
      /CE++f1omoau60xNT5HL53dVg96Jruvohl5NkGtoppBI0uRUKCZSxPZYwr0zplD3Aj1GCILA
      vsHBmpCsra2xsLjIlZs3UTxuFm8OgyJjGkZt8/g7ya2u8YXDxz9S74+qqrxx9g02UylMtwPt
      +nWa29robm1jdHKCZ598qmafJBIJ3B43Xo+Xff0DzP/kFUpmBcESiDU0PvAe20V3K5VKXQEe
      J7aF//qNG+i6jtvtxu71IlgWhXSGY7/w4p6lAovpDGuT05w5cBC/3/9RPHqN9fV1koJOSYLO
      3k7ykSzupgamNjcpOSTO37mBaJh8/qnniO1ok2qaJpFQmOn0OoJhMjk1RbZcpFzRONDdRzAQ
      2DX7ORyOuhv0ceXwoUOIosjZc+fwKQqVSgVfRzvFdAa724VT1QhdvMQ/BgcYGIxQSqZw+bw4
      JPkjL4ymKAqGpnPg6dMAeIJ+LNMk3NKELxJmc3kVQRDv62GRTCaZW1qkhIHd7aQc8eJ1NWCs
      xXf1HYbq0sdut9dTIR5XtoXj6NGjdHZ08MMf/QgLi8W7owjAZ6dn8YxPMtwdYGW9xKdPh/AW
      yx/52h8gm8vhDe8w2C2L7NQY/v4DrE3Noq4lOHXq9K7y6csrK9wZHaFg6fQeP4xoWZgICKJA
      INbAyswK3V3VKhK1LNCtNlJ1BXhMsSyL9Xict69cZjOTprC6gjcSwcxkYXkZsUXld0P/SK7i
      JrHwAkK0gbMjd2icmeb00WMfWVp8wO+ndOsGZlsLhUyO9cUl2gf70coqkiAydHCIzs5OVFXl
      7Llz5IsFCol1RH8jRqWMKIo4btxBcykY/f1kV9c5c3Co9j7b+4K3Z4O6AjymGIbB3373H3D7
      fJw6cZLhiTEolfHuH8A8JOKb+kuOAas9X0Y5eKw2mq5tJPj+j17hF1968SMxhl0uF0trq5Su
      WkiKQlt/DzO3R5AliajipFQusx6Ps7axTtEmMH13ltbNMQ5HkmQO/zar03PEjhyofge6TlR2
      Eo1GH7i0qyvAY4ogCHzmueexOxzMzM4gyTJ9hw7h8XiY9/aSbT4IQD7QXTvesiyuvHGN9ZxC
      c9NNzpw8+qHbBOsbG7T0ddNxYLDqozcMgo1RyotxHIEIFUPH6XSylNygYV8vjlCApdEo17QS
      mbvTNA32sm3qipJEplzcs9LENnUFeIzY2XxakiROnTiBaZrMLi9xdGAfkqJUO7WbFtlg/33n
      V8oqJiK5isTLF25w6vjhD71hYkd7O3fv3mXm2jAHXU7cq1eYChykrKvEmsOMXLqG1+PFY6su
      abKpPK379tGEjWw6zfjKAq71AFomhyRJhByemnLvpQT1LZGPAdv5MqqqomkaLpcLSZJqbYDG
      xsdpb2vD5XLxrXOvE+zuvP8ahskPvvlDVvJOTASCUoH/53//5x9JwxTTNPnjb/wF/U8cQ6lU
      WFxPUFhZp+XoAZxeD/npRQRNJ6FX26saFQ1vReDMsWoMI5FI0NDQUI30iiLLKytMzc7w5KnT
      971PfQZ4xLEsi0wmU0sXSCQSNDY21nrsKorC0MHqcufSlSu4Y7v3/eY2N9FKZa5fvMty3lVb
      PuQNG1Mzc+wfvH+m+KCZmJgglUpiyjK600Hq6i3aG5soza4QN1QWRyb4jV/7Og6Hg8vDN1lc
      XuLI4IGqV0eWd8UHoLq82yjmmVuYp7+3b9e/1RXgEWe7h65lWRQKBQRBqGVMbqcRa5qGzWZj
      cn4OORqmZMuhFoooigwbKc7fmGVD97IzSaKCwls3Rj50BbAsi/Hx8WrBq8vXcHncaMCN4Vt8
      5vkXMJeXaGtr480bV8G0yKTT5Ldao+q6vmcKdHNTE1/0+fZc3dRzgR5xtjMl4/E4m5ubBAK7
      k96217+WZXH6yFHabU68RZVT7V28sP8QOg7iFR/mHqJwfXKN1bW1WiDpwyIYCuFyuugcHKCp
      u4t9Z04Qbmuhq7OT5597nqeeeJJoKIwS8qGaBqdPnOTMqVM4HA4Mw+DGjRu7KswJgoDH47lP
      OeqBsEccy7LweDyk02kqlQrRaPRedYQd9TFzuRyBQID+vj66u7pqgqBpGremVuABHpLVPPzr
      //BNnh7q4L/5lRfftcLc+4UgCOzft4+KpjFze4TB556kmM2Rz+aYnZvj6JEjeL1eZufneGbf
      IZxHT6NpGpvJJAsLC2ysr3Px6hXW4nG++IUvvOu9SqVSfQZ4lNjuuF4ul6lUKui6jqqqqKqK
      YRjY7XZKpRJzc3Oo6r2KyNJWqyOo5gttL5EUReGlZ4+gmGWwzF2tiQAsBPKWix/dinP2zcsf
      2nsGg0FKFQ1HsJqX5PJ5OfbZ5xlPrPG986/z+lsXWYvHcbvdeL1e3G433/rud7g8McKduWna
      B/uomMYDM18ty6JYLJLL5epeoEcJwzBIpVIYhlErArX9Uy6XSSaTaJpGU1MT6+vrOJ1OGhoa
      CAQCyLJcWw7pul7bMFIoFPmPf/CHqKbA7U37A2eDjpDC//Evf+ND8wplMhl+cvVtogM92BKb
      cP0thKdPo7kbSK+t0+sNE2to4MK1K6iihbelCZvTgaHrrAyP4pYUjh44SNdWCsT24KFpGqqq
      ous6hmHUZ4BHiZ05LIZh1NycUM1ubG5upqurC7vdTiQSIRKJ7BJ+oOYZ2sblcvLbv/VPkJT7
      lzc70wZK5coDS4t8ECiKglFSyW2mkAspWqdeZe7OHJWKSXxqltGFWb71/X/E2dVKz2qc6Vfv
      kkyXkWSZ1qMHERqC/PXff4vpmRnK5TKpVIp0Ok2xWNyVHFe3AR4hBEGo1fXcXgolNjeJNTbW
      1vXbCuF0Omu1MN8tmisIAjabjblNDYS91/iiVSGbK3L24mU+/8Kz7+s7bT/v7du3MQyDYChE
      S3Mz3z77BgUE1samab18heJGlB+i4Vge50DUJNDfRXCgG0EQiCy9zGLxKQpzGcJHqwW+PKEA
      nnCIZDJJKBi8r1vk9rbQugI8Iui6zve+9z00uVovP+oLMLOxir+lkeTUBIcG9+86XhIErr36
      Kq6GIKeeev5d9/iqqoZm7F4vB02N/nKKdjXLqDPKhMPH7YlFTh3L4vO6HzpCvL3+3nbXTk1P
      YwkCw4l1bF4v6tgogZs3WVxZYeCF53EmNvF/+7toNoWwmGF6zUZ3UEHXtK2+wharL/wygVkP
      +/vDNYUyKjoDT59mdnKWttbWXYPA9jHZbLauAI8K2wGeG5NjSAEPt5N5fNFWfGEvy2sbNbug
      xvQM0ddeIXw0gXbkCEqgWoO/VCpx9u236Gxuwe/zgSBw9eYt5EoeSZKxIfDp7CJP5pZxmToC
      kFD8DMtBLizC0p+9ya8818/JfW0oivKec4VM02R5eZlbw7dIptPYnA4qpRLiSpLVgJ+OM0eR
      bTZkxUZqZYV9sszC6BqtTW4MRcHuy/OvQ3/KstXAZfd/V7uvaRjMFH3sH/DjdIhVBcvmWJ9f
      QK/oJOaXePrwsdp3s20zmabJ9TvDdQV4lHjiiSdwOp2MTU3SHA6xMD1Kc9Mp/M0xxqcm2T8w
      eO/gYBCfqOAMdCHZ7jk2VFUllcswcm6C1r4e7G4XecVCFMFlWfzXibv0ldN73t+yYHYtw3/4
      u2v8xmeKfOmJgfesBFNTU4RCIUKNDUghP6pgoQ4PY9tcYdMdw7e4SLSnB5vbRYfNRu/rZ0l6
      F2j0GPxB85N8xXOB/Q4X2sCX8fjambw1gtfrppTP09TdQS6ZJD63AAIICHQdOoBe0chtVh0D
      O2ufappWbdvq9dUV4FGjv78fu91ONBqlfOUSa3cncCg2DvQN7jrODAUJ/Lt/h91ux+68V/vT
      5/PREm3E09aENxxCEAR8kTAt0ds8Mzb6QOHfScUw+bNXRvC5bDx3rPenLocsy+Lytat8+Ytf
      IlkuEFNEcgEfaz4/7i/toy+bw9hhq4i6jmBZfDozTVl1MtV8iP+z8hIvHusjGHTgBIS2diYu
      XKD/6BDecKj6LoBjfpHcSpLJ2QxdbR66Wttru79yuRwLK8sMj9ylvbMDX1dbXQEeNVwuFz09
      PaRSKU4fPlpzbb5TCC3LolKp4Pf7d43Q4+PjJDNpyqtFfFtCM3V7DM9cksFS6j0/h2Fa/PEP
      bhJwmBw9OPjAWcA0TVILC5RXErz8+gUaG/zMpXMs3R1nMBohbCS5lC7QePho7ZxcdxeF9jY8
      8wsIAjznG6ddWCaYSpILPc/irVt4PQ4OP3MGWZEZvXiZrkMHaLx1l+B3f0jK38T3AzotUYVf
      PVHNi3rrxjUEl51IdzuB7Cah/m4Uu62uAI8aO5ve2e32B/bA3eadgjkwMMDAwACXr13FnJ0n
      cu1Vyn6Lgdw6P2vmf7Zs8effe5Ohwd4HGtmaqqJ9+6+JrGQ4V/Hzb54+zfrGBpl8jvWKzvR8
      BhMJTzpDrgJFrw+vx04+HMIzv4BsN/gd+99iAWO2w2QtC8Vup7m7E4e7OrP5IiHI5fG98SaC
      YVS74FBh/9QUPxQrDK4s0XxoAJfPi2kY6FoF2VZ93roCPEJsj+qqqmKaJul0GgvwuN17jsB2
      u/2+z2vlDxGwTc7gGF0iFM0Q0h+iPZIAWU2mWCw+uJqEAGLzAi9wnueb1zHFLzM1N4slQG9+
      kbfHDb5YWMb1w1d5OdjPy8FBggE7zTmRX5NlgkoWgExwgPXYGQCcgQDFXL6mAHank3x8A6Fc
      jX73+Zb4t97buFNOXi/EKcnP4PJ5q65PSaKiavUtkY8a29FeTdMwDIMrd4bRXXZEAbRsnqNb
      nWBgqwP6VmfFva6zurpKXC0Q/NTTJKJhNMtCnvn2A+8tYSJgslcdNZvL98AcIcMwKM0v8N2Z
      HholN4W3ZZYLZzn2bD/5mXkWbpX4xdlRpFoealUoU2mVFK38v/v9/MKghL3BRjJyGFNUwLJw
      +Hxk1paJuFyUna5qS9RoGK2jFcfkNOHYIrKYw9zv4Pjhz3NhXUfXNErzE/j6h3b3G3uv/wF1
      Ph5sB3QMXacnneatgp++o51Mzs/xxPETuN3uaheYdwTALMtibn6ehY01soKJr60JUxTJHTtM
      6dqtB97PEC1ebHydr7h/QAUZzZKpWDIa1T/tsYOY5t5JZ6Vikcyf/Cl+JEa1AF9w3WV0yYX5
      8hRm2xGeWJzdIfz3s5h3cl1z0hvdv/0SlLJZUosLdHqcBP+/PyN1yo9w/JdZnJhi/MmT9Ic0
      PLZFyvYuVg9+nXTTCdyVKdRSGW/P/qq9JMvkUmm8wUBdAR4ltutkrq6tgduBLCfoF3LM3y3g
      d7pqKb97LYcWFhd5/dplOo4exAW7cn48vV1YooBgvjMZDqxojrA38aAUIazgvkk4AfIAACAA
      SURBVD1z8C3L4u7oCFnnKi9473BbPMKCb4B9/lZKuXnEN88jFx9cux/ARGZ8OklLdxaHr9rD
      LLeRoGegG68s4+5XsftMVh122gf7yW4meb1hHwePfw3sbkyx+lwVVcXmdMDWyN++r4/J68O0
      7+uvK8CjxNz8PC//8GXsfh8nvvBp5nNeVldmODnYz76BwXeN9kbCYfRMnvjIJEGni7xNxOX3
      4QkGMD1utKYY9uXVXefodoNAy/IDhR+A5pN7ukFnpid59dUfUzTbWAkdZ+jCMD8Jh2l8uh2z
      NUbw/LfuO8enlOl1xnFSxmGVcQoqFVFi/pZJx4kTKIqCbugsTEzRNXSA+S/9T4iiSKVSYXMt
      TnI1TqlYpqK4kbaEXxAEdK1SjRxvJfIVluL0NbdBqlDPBn2UyGQy3Lx1q7rHt6uT1liM3p5e
      HA7HewpGbSeB6YbB+MQ4IDCVWkevVAhduknfrVs1T5AJyP3L+AKbD1QAzR7B9it/jieyO9Wg
      VCrxD9/4T1De5FZc4tnGBorDS/woOkDH0T66HGmazr9Fz/zCvWdzWXgGZ7ApRYQdy6IJ/xku
      +T+LaHNiaipeb3XbplnRaOhoxRcMMntnDCSJWFcH2fUNEkvLNPd0kd7YRC2WUOx2KqUifq8X
      mymwr7u3GgWnbgM8Uvj9fp595hmefuqpquH3M5YskSSJSqWy1Szaz8TMPE0uD4Zk8KcZhd+w
      ++hSs1iAESoSehfhNyyB8/pJvuhrqD1HpVJhdGKcm2MjJBaydAegKeSi/coN5jp8HHeMkls3
      aZ4f56YVpZsFBMBQwNW7iEMp7LqHaYnQ9yR+K0Ihlcbr99A60IthGGiFIkvjU/hOBzENnXBz
      E7IsE2pqwo/A3FKCSFOI1q0tnSuj4xzu7MPv8+363uoK8IixXfLkYTFNk5npGf7LN/+B2aIH
      GQOw0AUnfxHZx2+v36HByuNrX3pX4X9TP0bw9C8hSRKra2uMT00xs7RAd0TDHuvhU6+8TpMy
      g9sZJjcU4rR8kWC8i9WMh1m/RdpuJ5kJEsqlsPfEcTruRaAtC7SNIMu5Dv7cHua552MEm2KM
      nj1P22AfCtD48k94rRRE068Rbgwyc2OYwTMn8SY2afyTb/I3jU/x5BeaKc3M4QkGUIslCoUC
      gXe4a+sK8AnkT77zGrMlH5YgUOGeMiUkB/9342G+It/i0zZ1z3NzeFlr/yUauz/HsSNDvHzu
      HHEs3JEIuSUouxrxex1sdEg0u/NoUj8T7m4Uu5NVR5inzbNcc59kuuTllWc+x0tT36DVH991
      D0uTKc43o/rD+NOTeCfnWI8con2wv7onolDENTnBr/ZlKQ38DktJE0kSySWTRFbjKGKOl3xv
      MnFXRRB0yoUiYbvGHRFEQaCxsfFePKRuA3xyUFWVV86+xZ/+ZATdqgq+3Soz2OKnoynItfEV
      imWVZrfB031+SlPnONMu45YNcIUpRk9C2xkisbbajrS/fOUVHB3tAFTKZdZGRymmkrR1tKDm
      c5RzRTrCYSqGyXR8jab2FkxRYiOVZ9nTTEBSeWr+rxgwZnErFmVspB37cL2WRXCaBPYPk+h4
      gVfEZ2loaiDUXC154pkew6ZskGx5krmRcRweDw0dbUhaBdcP/z1RZ5KFfV9nLmujpacL1+wF
      zJ4z3Lo0TNgfxG1z0NPeUZ8BPilYlsUrZy/yjVduYgp2bGYRTXTR3+zj3/yzX8Nut/OF1TUE
      QcDlduFxu1nf+Ap+vw9xa1eYZ8vFur2GVlUVa+vvzkSC7vNvsm5vJi6EcKXyHDvUx+ZcguVs
      is6DgzQ67fjDQXrSF1k99jnWL46wKSrMNX8FtTWG0+dganiU1iPHaOQtgjcukw8OstjzFayZ
      JPMzC0hbm3zWBCepFRfyxh3sLieBhiiJ+UVWZ+ZoO/6bEJJwGDoOTSM1MYczcpQbb94g5JEI
      9nWTXl6uV4X4pKCqGldv3ORbZ+/Q0+jh6aMDmJUyF+8u8tyJfbV9vk1NuwtKxRob9rpcDV3X
      MUwTpVik/8++gT2bpdThYl5qQNUlGmy3aY6/TVLuZ+O1HPKJw8jpPFPGfhIjk3T4ZHxOB6fP
      vcn3jBjrQ0O0OgQsATY+9QzJp06jC7A0MYM9GKGhsZGFkREy6+s4PV7CXZ2IgsjmzDRKUeX4
      /oN0On3MF9Msbhi4DIF2bDQcPIDTLpHIZrA1hhAFgWBTI1OL83UFeJypVCrIssyNm7e4OTJF
      Z1DkX/2zX8e9lUPz2U9XfuqWyXe79mtnz1Kx2Qiv3MbpiKNb3tqMsJ4Bs/cMV7LgUUSuJQye
      TCQYPHoYTVVJXb9G1/FDhKZmcCwuc7izgJm4znLz0+QSmwRijSwvLpNKpHF6vYS2qr01HzhA
      8/79uwJ5giTiSaXxer2UymVWb0xz/MAQAwN9ZP/gP/LG+Cgvfe1XGOofZGJ6CptdI6UW8dgd
      dQV4nJmdnaO7u4tTJ49z6uRxcrk8Lte9/KCHaYW6vLLCyMw06UoZd3crwYuXCc+NQFbk+6FO
      bsu+ahBhC8nhxBaNsN+RJuJx4nQ4yOdytDc1szwzjyMawXA6OcQERsSNOnCQ+NomLr8PQRDx
      x6oG667itu9QWKffz2I8Tubq20Q7Wjn8uefYjG+wnkgQ++XP8lXRxABcTidHDg4B1Db41xXg
      Maa/f3cdTL//vWV8XrpyhXS5iF7R+fyzz9UK7Y6MjzORS+JtiRI0DKI/eBX/5auIuoGJnZJp
      o2DeS4xbWU7hcbtp6O6ioqqsLSwyMTUFlkV59iyq2Eo6GubSZ56j1Wdh9O/DYQ8gJzIkl1dx
      +byMXLxCQ1cH6ZUVWoeGEPZwAQuCgOJ0Em2O4PO7qJgSsmLDNE30xgPVPcDvqGixrVT1sih1
      7kOSJMxYmJIIU9PTrK6tkr5+nYvfOctGoWoIR19+lcDFS4j6vbKJhnhvRjFNi7feWkJ3VDs6
      KnY7od4e5rQyk4UcC85ONksa2ZlZeuwZRg0Xmr1a1tHp85FYWWNhdIKBp87QdvAAbp+X1bHd
      vX/tmSytr73B1NU5SoKH5blFhHySzWQRrVjC6XS+a1vYugLU2ZOhAwcoLcdxt8YYK2e5ODPB
      2h/8X+RW0rx6dgHt7gyBi5fv20BjSLtd6BYS128nMbYqTkiWRd9GgvDdBdakTrqeeppSWSWZ
      zaLmC+jbma4VjZbBQfadOY3T58eyLKLdXcj2e0W57Nksg3/0xzSdO8/iWJzXzy4RV91cvjlL
      OOTEqFR+6hKvXhalzp4oikLQZkcVqwlzotuN2wW/3HmOo+Io/otNCHuMrFrFgHfIXCZTZi2e
      p6XZS/jKNZq//0PW/O3cSAbJZlWeOHmYeLYLR7HE1M3bSKKIWixx2jAJvH2V3295mtaDLQwd
      bMDucKDm89g9HkJ3R7BlqptlEMA0LOaWVT79wmHuXLlJVyC0q4pdJpPBNE08Hk9NMQRBqM8A
      n0S2d5aVy2Wu3bzBj86fZWV1tVYyxDAMROGeaFiyRPalo3jdedq7Y/iLe0eJLVEELERMFMHA
      Iek4xQq5ZA5BEPCvjSA0WtgDFcBiZSUHkp1ALEZDdxcdR47g8AfocDhpfvV15EIBTdW5cnWF
      9fUigViMxOzs1s3AEkFsK/FV/2u4JRXTtJAVhVBvP6uqSiKRqJVASafTOJ1O0uk0pXweKZUm
      lSnVZ4BPEtvNNN6+dYMiFsV8Hmc4iLctxoW7w7TOLxBPJUhuJjFNk4DUgycYRJJllno+xcbA
      C2BAx0/+8L5rG4LAi4FzfNGuoQg6DsnALpnYRIOE8jmW+RpyV4mANMyTwiivZ9tIODtQlHtG
      bTmfR9c0orKMoOsoTolfDZ1jRg0gF4IkMhXkrd1n6cF+2te+h885yWkgEMpxafBfVAXeMCho
      GueuX6U71kwyneLg4D4cDgcemw31T/+c7OgYv9/+fF0BPklsJje5evMmG+iE21rw2FoAcMQ3
      OPb33+U/h48SPTnA0Wf6qKgq8bkFZm4M4w2HESUJtVjE4bDT6nbCxr3rWoDQlGHQM7fbQ2kB
      BiQcbizLYnbgn+AoruPfvMvXm25y88BT7GxEmV6L4w4GKdgUDLcLR8M6Twg3OOF184b0JEtZ
      vRoDAEqhEKOf/R3aZ/8RWS+iNT9DU6xaASI+Pk5HVyvRk4cwdJ0WoYOZiVlisRjGufPoN29i
      yUp1xvjAv/U6Hxsi4QjHDx3mr//2b3G43fi32iX5376KLZniQNsqjvkphP2/hmJ3EuvuxNAN
      WgYHwLIwDZN8KsXC3XEGdlxX8ICvee/sUUO0kQ5X25aq9gDDp/83ZL2EKdmJ7PAaWZaFms/T
      2NONJgjM/tbXaVv+DiWpiaXuF6mIMRyVJMIOjcl6O7lz6J/Xfi+k0xRXFjkdyWHNvoIU/QVU
      y0FydhG3WC3gpS8uVZ9ZNPgFzxt1BfikIUkSvkgY51aJEEmW0cNBLOAl2yuovggjklJdSlR0
      9K1KCwgCoizhi0ZInTyGOjuPvVTCFAUcnXFk6f7yLBYwb+9nbCaJIGZo3r8PU5TIVyTWx8Zw
      eH04/T7cwSBYFuKO7ZyF5mbGmv/H2rVslQq6urftsU05m0XL51nbXOIJ1zQLVKtfeASZw/v2
      V8tHtrZQuXoVd2uaJ+1zdQX4pBEKhXjm1GmmFuZBEFgv5dGGDmBJEkXfLImu58mms+gz87Rf
      usaFllPYmwrEGt3VC1gWqXKJ1Nd/iYY//xsygsjfGSf5p3zvvnuVA52kT/4uBwMxlidnKKTS
      2FxOVkfucvDMMUr5IumNBKl8Hnc4jCRW7QGjUmFzahpDFJFkmYaebiqahmnu3apJK5XQSiV8
      DQ1UNtdZEXq43PcFSGsEGwNMJjewbt1CdNjwNEToPdmLU/gellBPh/5EsjM4tLGxwfXbw4zP
      TBNoa8EUwNAqnHr1DXyJJP++82kORNfpfvErpFIF1sYnGDx1DIfbhWf6Fs0X/wPf1Y/xa57X
      atc0BYl0x3OsHPlvqSie6oe5AuMTM0gitPR14/TcU6jh85fok22YI1cpPvMZlJl5tOuTDB88
      zf6IwXo2Q6lUpuHQIfLJTURZpqG7m/TaGlo6iaGq+Pw+Fiam8Ljc7Is6ubmcpvPgIKV8gbb+
      3moVOEVBK6sU55cZCkmkN9frM8AnkZ3Jbw0NDYR8fn7n13+Ti5cuMVfM0djejlvVEAyD/9n+
      A4LCAjcqnyETj7PvzHEkRcE0TfLdQywH/1dOqTlWMq2IRpnVTRXHsc+jemJYW6EyqaIS+os/
      4lzbkzz9pWOI4r37G7qBTa2wrlboP3KajqY2pPkV5PACTrNMxjxEbjPJ1776VX701kUiHS1E
      TZPNv/g2xlMnGTp9jORqnORanMPPnMHjduHLJvCrItHWFhwuJ4ZpkZmaQWlux+uxo0aDzGdV
      ZFcH0u/93u/9HtxrtrxXiYs6jzfhcBiHw0FjNMrS1DS4XQjRMLZUGqPsYizUxFpoCLWsomsq
      pm7g8nrQDQPDHUX1NpMN9pOLDhE3Q+h2L7LNtqNhn4DfOU1XTEAL99SS2SqaRn51nY3lFZzN
      jaybJokrV8htxHEf6kBo3I9XW0QK9xFraCCTzdDQ04FPUQhkV9HkAjlNYGFsgtb+HnRNJ5tK
      U/EG0PJ5VqfmMSyL1fll7s7micTCeNwKpmGip7L4ffXq0HWgtuz1eDz0dHUxpRXJHD1M5uhh
      yvk886OTtIQi2EMR1mdnia8t4HC7kO22WlDNNE0EIJtMI8oSdrertgnflCSWD/76fWnXCyPj
      mLkisgU2Q6MhamN82qSruY3QmS/SoCjMLy4wuGUcK5bAzOUbyH4PZqyVlr4eBEFEsdtRSyoV
      VcMd8OOLRui8/To/HneQiPXSv68RRZ4hHKh6nYq5PBSKBHt66wpQ5x6madLa0kJyYhzVMBAl
      CYfHg7S1ZLEsi3B7O4IgsDQxRvfhA/caVegGY1dv4u/uZ3F5icnRGfr29xBujtWCU2qxhGur
      wNXmyhr+fJqsL8ap3gFWsinsnd20OhqYXIkTVVU8ikJrcwuyLFMul5FsCrLgpHP/IIokISgK
      RqXC0uQ0xVyO9PoGTT1dFLN5Avo4LzSmuWo/g6woGMUSq7dGcTgcyLpJZ1cXqVSqrgB17iGK
      ItFIhNNOJ6++fRHd76WUz6NtVXDb7qsFIIWiTFwfRhAlioUiaqFI48EhHD4fMV+1BOHiyF1c
      Xg+yorAwPk3REAj7XQSiIRaH7+IWK6wsj1FObSBIIqIo0OgJkC6UKZfLuN1uLly6hM/rxdAr
      JE0d1TBRbDL6y//AZN/z2MurxHq7yCU2aR/oxRcKkt1MMu79HL29PoKFTeK31njm8HE8Hk+1
      4V+pRDKZRJblugLUuR+P281Th4/yl9/8Jo6+XkI9PfcfE4ngCgYRRZGQIKDm8yQXl3H4qmVH
      BEHA5nYzPTyKVDHJpPK0PvcspWyK1OwqHVN32Pz0i0SaBHz5LEcODhEMBFhYXITGMJPzc9jt
      dio2mYLLjooDu02ikkohSjK5Y8/Q5vWSmIujl1VKuTxtPZ34N++SF8IEQo009u6D9XVM08Dt
      rnqdEokEgiAQi8WqRYQ/1G+2ziNDJBymo6MDI5/HEw4D3JdbL0pSzaB1eL3o2u5AVaSjk2OZ
      Il989TUcMzm+990xNrIS4e4eCr/+P+BsascbiyFICpqqsry8zOTaCo1dnaypRb734x/RurBI
      /zf+jldfX6UoBnDYbJiGgSfoZWXsDs7rtzDP3mZmWcMwTHRXCE8oSEktY1kWU7MznL18k0ql
      Uo0EGwYbC7Ocf/N1rg7fqitAnb0RBIFgKISzoWHXZ3ulQQMUkkmcgcCuz4ITk7SeO4e0leev
      qgZXLi+Rzag126G4uUnE7yMcDhOORJBqWzYFugb7aX/zLSS1jE3PcfvaHJZi48J3X2b82i06
      B/s5Gk/g3phhedNi8s4Eb16eJbe4RmJjg2w2yxMnT9HX2oiiKCQSCf72wijGuX8gas6SqZTr
      S6A6D2b/wAAjP/4xDo8HhyjS9spPKK+n+S8NJxk61Eh7+70tlqIsU9nqXLNNYHoawbKwBHAp
      KiImhiESj+fx+atZne6GBmZG7qJjkTd1nOEgAHanA9FmA49CuGWa3/PcpOBt44r/X9A1dIBQ
      cyOy3UFpfz9Hy3+PIKTJO7/Gvv4n6e7s5MqVK6ysrpKfmaZoatwdvYvD7uCLxzuZizxLwB+i
      MxCqK0CdB5PJZpEjYdbHJzgsikSvXWfVFyGllLhwfp7Pfb6HSKRaYSK1tIwzFN51vuGwY3nB
      0bzO1wJTDJltvKEeQ1Jadh2nOp2Ug17aVtdYfuUatw4cxlxdxnvsMJmvHScwdgdddpI4+DW8
      kQjz167T2NWOJcDmlz7DxC0ffW0H2HdgCGUrSNfV1UWpXObl116lvzFMObeBKDWxv6cXn8tF
      KBRCVdW6AtR5MOVyGWcwSDYex7e4jADIokm7K4uISXpmBpseRXbYQZTwRqu9iLcrOCROHKBP
      +CvsegaAIXGcnlCKC22fI5fPs3r3Loam0jHYS9CmEP3Rj5kzgpzPhDje5UIrq8w2nuGtTQ+W
      IOPKBQj5K0R7upm4coOOg4MIgNLaR7pc3rXTKxAIIOfzRH0Brk/O0dreyqGubvL5PFdnxonG
      fbQ3xOoKUOfB5IpFBEmi7cQJzPgGlgztLSP8W/d5BOBq9hhLwm+xPjZGqKePjekpTF3HUFX0
      SoVobx/Xj/0reme+haOcIOdpZ6rzawTGZ2memuaa2ILkVGg1LARFJzBwh8+rGY4oN5gc+pck
      UjlWJ6c4+MwT6IZBKZcnPj2NvVhC3ywwdn0En9+NaejMr25w+ujxWl80h8OBJEl4/T56pA66
      O7uw2WyUSiW8wQAVUWQlUc8FqvMuFHI58qpKqLODTH8vbcUf4fBUu0kWcVA4+BL+phi+hiij
      598k1tNFpawS6u5ElGWWR8dxDO4jefR/QbJ0LFOk5x+/T+T2bTSbnUxzM5mcjcL1FLGuduaO
      /1Mi869T8PRQtmQKmQz5xCZaqYxkt+H2+wg5nXT8/h/ystjMna6DfO1EH9nNDbo9wV17gGVZ
      rla30A1ijTGCwapt4fF48K2IWJFAfVN8nXdHcjrwhUMApHt7mHO+RGTjBqrs5vxmI9HYAALV
      ANr+55+97/xArIHNhQUcXg9aqUzz5CSR27fvqyaxnrYYm0whDZ5gPXSIqUtXsGUX8dpsND91
      mtTLP2E51ETPgXYCZhZneIUnXWlOi9dQ8/89qiuCxybcl2ohCAIvfOpTlMtlfD4f2Wx1E/1g
      Ty+Xxu+glus2QJ0HYFkWmUIRaauevilKLLZ/loW2z5BZW0P0qwiiSGB8koaLb/FHTado7Gmg
      tzdU2xnmCYfRVQ2jWGDpzggHV9d2C/+OX0bvruAsL6MVSzS1tfLM/sNEwmHmZmYw12f5z0Ro
      TGUYLaZpDq7RJ+bZVGLc0mw4Ii7WVzcol8v3pfN7PB48Hg+maeJwODAMA5vNhq1iEd7fV98P
      8LiwHaR6mDqfe2GaJn/28g9wd3cD/3975xXjWJYe5u8mxmJOxcq5qzrn7ok7YXdlzWi1XtkC
      LFmWYNmwrQe/GLIAAzbgJ0MPEmAb8INtwPbCguE1IGmVVrM7u5NTT890ru6urtBdrMhizuQl
      771+YJHNih2muneqlx9QqCry8vJe8vzn/OePUMpkWJuexmSx0OHz4unuxr6yyuj/+D6iqvLv
      R94gZci8+soAfX0bm1DomsbMpWt8Y3aO8K2bGBYw9ScQXSnKko0CdhZsE9z1P4ff6+JEzyDD
      Q0MIgkC1WqW4eIu5tTR3VR1rOIieTeAsrpJ19BKZjTB84iiRG7eQi2V+5fVv4ff7t/18arUa
      6XQaTdPI5/O89dH77RVgv2MYBsVikU8vfo5mGBwcHSMYCDTLmKuqCoDVat3QH3e787RSqVRQ
      BYH1tBX0apX+Y0dRWibIjnv3kFQVXRFwKwWSFSeLS7mmADSsQStTd7CEukjoBl2ZSzjCC8hS
      CUEAu17ER5ykNM6Ix8vowBAD/f3N95BlGUf/YY71Q/7CBQqiSOjGDOUr0/yw18zJAy6uvfMB
      DoedztEhLszeYigRZHR4eENof6OzjsPhoFQqMXn7Fn2HDrQFYL/SGLDVapW3P/wA21APZouF
      i5FZihc/w+F21RNX1AqqJmJRRPw2B06HA4/bTblSYXFxEUmROTAySjyRwGazEVifPa9OTuII
      h5vvJ8gy2ega3r7e+v+CQNXlBp+Oo2+Bf22a5S/UV0k6vt18TWVllXImSyqewt/Zz8roKMNG
      B+5kqan9GIAeOMKxN/6ADndgi5C29iMId4a4ubJA4Mc/JdrhJlyaJpCzIgdCGKpKIZujd3SQ
      lUSC5JVLvHD67IZziaKIyWQil8txd3EBu9vRFoD9SiqV4sLlS1RkgbJZwr0+M9s8bnKpFO7B
      XiRZJvTFD7gUqeL+3j8kk81x7cYVhHQaW6iP7iODzN+Z5Wf/8wNe9PlYml1jeeQIdjlJVdPo
      6OvHtV6WvFapkE8mmwJgGAaZ8REqqgf38iQmDN7snOXagQ6KqTQOVeVbZ85itVpJplLM3L1L
      pVLlXfuvMmo/QG/hNlq5SM0xxvCbv4/N6X2g+tbf08vknZs4zs3h0XJM8D4r1jf5ca6Doy+e
      Ze7aTcT4PbqTt7klHaRUqtcHbUUURfx+P9/51i/xf3/wg/YeYD9Sq9X46/ffwbE+yK35ZWoX
      r/GZ9wSnjoW4d30SbyhINpFETC9iq6aIO0aRzWbUUpnO4hw9So6LwiHMDge5u/f4ziefcy3Q
      z/+2H+S5CYXjZ8f54t2Pcfb20eH3Uy0WcXg9SIpS72K3PlhFQ8NeWELUquQdfZQrNYYMgVPH
      j28Z0HV1rcTlyUlWEwm6fF6OTEw0w5S3I5VOw3rSTSAQ4C/f/glh0zw9996iYgswPfabxGJ5
      RosFVn1uaqKJzv5ucqkMg2YXY6OjW85Zq9W4fv06DoejLQD7EV3X+fyLL1io5An099Jz/ftI
      Uxe5pA8T+N4/Z/HeCtlUms6RIawOJ1pVRTaZEUShXv5Q15n5/Auq1SoHX3ye6Z++x7fe/xjr
      SJSUx0T62O9R7BrCbpNZnp6jEs9QkWUsnUFEUSQ6M4tsNuPuCmP3eOpRoesU1mK8OjRMV1fX
      rjO6rusb1JvtUFWVd999F4/Hw5kzZ/jwo49QVZVoqYBvfBhRkpm7eoMOm5mxgA/V6+HWF1cx
      WUyUiyV6PX7e+Oa3tz134/3bKtA+RBRFDo6P8/H3/xeecCfZ8Gn6Fz7kjE/jnmwmvrrG2NnT
      SEr96xVbqjYLgoAgSYyeOwPrAzB84ih31Coe9QP0gbPYPrvOuwNWTo9aGPEG6TtykmKxyFos
      Vq8darHQcWiChes3iE3epPvUKUw2KwgC5UKBam1rjaDt7mE3Eskkn16/gu61U9E0VFVlaHAQ
      n9+Prmn87NIXVO0WqtUa5XtxCpEoV0PDlBMZzIrI6ddfIrm4SiKZxOf17vj+7aT4fYrJZEIt
      V4gsL2EdPERs7Luke17AQMBqtxFbXMLp9+34+g3N7goFjhw9gefIL5M3PCx63Ywd7iUzO09/
      VzfKemM6p9OJ2+Uimc4gBXx0WK1IsplUPE56ZZnMahTJpLB89y7HDh36SibZtz94D99ID5aO
      DvLxJOPDo8iyjCLLlEolypks8XsL+E0mnnvrbcoLa/xJxk+5rHP++TGGb/0Jf3XTDpYKgQ7n
      lr1Ag/Zo38fIFjNyUWLx6iT+4QEsHXYMXScaWcS/3rq0QetgVNIZEhWw+x2IooAky0zfvYsk
      ClQ0jYDVTnRpEUeHA4/H02wnZBgGoihSMXS89+bp/bO/4CeOIa4ERnj11RE67DKGYeCIJ7/y
      vZkUBTm9gG52NIPcGoPY7XZz/uxZjh89yuwf/TFitYrJZuGbjuv8HcunVBS+igAAHO9JREFU
      zMZ+g1jwFG7CuHu7eP/6JV47dhrnepf4Wq3W7I3WFoB9jAic6B/mXmSexRu3sJgtGKJASLFS
      vLuAoes4fBuXf0tkka7v/x9+5DlBx7EBzr8wjN3roWI2U1ZVzDYrty9foz8QoqszvMHBJggC
      hWIR1WKm509/iDmRRLf0E08UufjFMq++MoBerWBuicl5XBxmKynRhIxCt9fcvIZWJEnCFwig
      Ap2BKL9j+RiAq/kSte5jnArbiE7NIBn1zfSPP/oAyWzGEAX6PD5OHzveFoD9iiAIDPT1ceHy
      JWz5ZRyyjxdPn206fFKpFJfv3MZksWBe7woJYL8zg1Qo8ncHLtBb+GtmtP9AVbZhttuax7n9
      fg4eGMdsMm1QlURR5NLtWzgH+1HULFJ3kXPBK2S1KpH8BOn5CCNuD+dPnvrKHumRkRE+vn0d
      xWrGN9C17TGSJGF59VVq177E5p8BIBZ+DmHiJdbWYqiTU7x+9jwWi4V7CwtYeruwuZwUZu9S
      npzmssXXFoD9TCFfYCUZx68IlGrqhpanLpcLq6wgyvctNLquUxgdxv3ppxywTpEOnqEmmskn
      U+i6js3lpFos4RYVTIqyJbxCkiQ0WcKQRPRXZBwrM0wA41xlMfyrdJ76fTwez56EY4SCQYai
      AZZWV7YNbWhcl2N4CPHf/huMxU+4tbDGfNcZBN2gw+9ndWGBmbfeIhUaJa2lCA73YXM6Gf/R
      T1gpGtxa/bItAPuZnp4eOq5Z8KdWWfbdH3jlcplPrlzCPtiHYr7ftbFarVLu62HhX/4Lotoa
      JXzc+OQS/pAHu8vBwo2bSLKMX1SaTqRG1xiAfKFATRDRDbgx/Fv0FAR6pAxSz2n6zvwT7M6v
      PvgNwyCVSuHxeAgFgtxZmOfd997jtVdf3TbaU5IkHJ39GKE+Tp80cMxMU63WWIlGcZdKHPjk
      M/5o2IHcG4T5BajVGFiLMxjIc0KcagvAfsZkMlEqV4j4hznUfT9+Zi0WQ/C5sa4XoYL6wJJl
      mYqqIlhteP7qNu7bM3w/+BxhTeabI0EsDjulXAGr08HV6SmeO3ZiwypQr/ImUkymGDU5Gfze
      H2Kz1SvAyS2lzb8Kuq7z/gcfMDo2SiSfpuvoBJHLN1BVFXOLMLfSqqYdPDAOwPjoKLNfXgIz
      /LLrUz4pP0dwYIzVO9NkfukVfJE/JdF5ui0A+5m1WIyRTI6irYOenp7m426XCy2f3nJ8w8zt
      ee9DXBcvoZrM1HSBm1NJXA4LZ08GMFutyLLMcqW4YfDfmpthKRajJEmoq1HGf+U7dHR07Pk9
      qapKRtJZEWs4u0IA+EcGmJmb49DExEOfRxAEjNOnsIpfck76nODEBPNA9/AAlb4ephKHiEzf
      bZdF2c+srq4S6QqR1zSu3LhOLpcD6ptVSRRZuHGT+MIilfXKbrIsI4oi5rlZ9A5QHEVGzCuE
      lRRrK0lkWUGWZbRajT5HXZ1pqEA2lwvf4XFMtSpvnH/uiQx+ALPZzJAvhMlyf7ZXTAqVqvpI
      51EUhQMvv4z0O/8Z5R//lGXpEA6fl1Q8iVHKIpWzTJw90V4B9jOpUp4ujxvn7S+JD7xEKpXC
      4XBw884UuWKW4aOHKBeKJCIRokvL9IyPk42t4QvN0+29jUiVfyXcpIJCPPgNYtRbGYmSRFaG
      6zcnOTxxkOjaGrOJNUwdNl44cnxDuPJulCsVBNhRddkOURSZGDvA5/emcZlMqA4H6WiMk4dO
      PNJnIwgCsizjCwQxDIOgy0MsX8Du9bIWyxLo6SO+uNxeAfYrhmEQcLop5Musdh6gtpbCt17B
      zWq1MnT0IGabFVfAx9CRCew2GyZJ4MDJo+iv/1N0a8d6RpaBZLFROPhG89yCIOAe6OHa3Rn+
      6q23uL44j7u3C7eqMzwwsKOuX1VVbkxOMnVnCsMw+Ju3/pYf/extag8RGtFKLpulmMng+tFf
      wtItzDYr2fXV7XEQBIFzp04xZnPhKqjEIkvc+uxLZq/caK8A+5muzjBBf6CppuQLeW5MTrKS
      jDE40rPh2J7RIVYii/h7whSdfdz51h/jXvgIECjVuqmsZRFdBjr3K0E7JInDq6u8k7NS0ef4
      ey++uOPgL5ZKfPHnf0YuMktltAtZVvi1X/1uvdbnI+JwOEAUKf76r2FRzCTvLeEcdDz4hbsg
      CAJjw8MMDwzw5++9TWC4n/jUXHsF2I8YhoGqqmjaxp5ZkiixVsgycHZrKLI3HMJsNrEyexet
      VkO1eFgb/Q6x0V/B/s5lhj/5b5hzy83jk6tRhien6LxynUBikjcrP90xngbqndhrqspAchmL
      WSbg9yMIAv19fY8cX5ZKp3GHQ1TNdnRRBk3fUPHhcWmoRb0ePxgGgfHhtgDsNwzDILm8zE//
      43/hh+983nxcEATsdjv+Dmdz0wvgmX8fUzkFwNCRg6zei2DoLemPgkDmjdeJHvtHVBzhpuB4
      ggF8JgVB13lTv4hUSmxpUqeqKpX1zo3hzk6e/we/QfnXf5fxI6/UZ/HHvL94Ig5ApVRibeYe
      im7siQA06AqEKKSzKO3q0PsPXdcpzFxgtHwB68qnzUHZGLiHDowTm5pr2sYzfS9StdSL1pby
      BTrcbmSTsuGc5aEBMsfPoSPeN32KIokzJygrCuqqn9lagFy+0Hxe0zTeeu8dpqanm+exWCwc
      PnqMof6d9wkPg0lWWL09Q255jdeOn+blk2f2JEq5ce1+vx+9WMG0uPRs7gH2ukLC1wlRFFmV
      XRgujYGgwjsffcirL7yEtJ6UMr8QwdlzP5dXF9Zbj9ZqTF+9QaBnY13OzcnwrSyYTNz65suM
      HT+G7nLyt599zN9/7VvYbDZEUcRtsxNaL4fY4FEsPtshCAKnT5/m4MGD6Lq+Z+ZWwzDIZDK4
      3W6i0SgYOkvaMxIN+iwP+M0IgsCp86/wtzmVeCFH1YDpubuMj44AEEul8B0ebVZkgPXBf+0m
      A6dOEZuPsDA1Q4fLia7rVIolSoUiuqaDACPHD4MB0XsRTFYLhtmC5nRQisZ4/dSZ5j5AEASe
      O3d+VwH6Kthstgcf9JBomsYnn37Kiy+8UO8ZsDCPe7CH6K2ZdkrkfqVUKnHt+nVulXTKywu8
      +eJ5TCYTkYUFbkcX8fd24fR6MAy4N3kLbHZ867N/uVCgmMkiSRImq6WeLimJxO7OY7eaMV/4
      krm0Qtf3XiGzMEtwcIAJu5sDo6Nf20nGMAySqXpQXzKVYmS9rlDdOlYgshCpxzBN3sA12IMo
      ihwO9T4bK8DD8KytElarFVWr0d/jpFJzNzeJVU1DrWksLa6wdG+BWrmCxePBH6qHFQiGgcVm
      x2K3bzmnpcNOfHGJl7Qig64pVnM9FM0mqktRDrx55mv72cViMRaXl7mdWEOWRCSbldmPFuuF
      ehEwbGYEm5VSNofL5ULTNLosDvp6f4EEoFaroet1c9rX9Yt8VMaGhrlw6UvGBuvV2yqVCndi
      q3QdOXT/oJYKDuZ0hq4f/Dl/beoleeAALz2/0Vfg6QrT4fVyhTynerqw9x6kp2LgzJS/1p9Z
      IBBgNhLB3RNuRr/aZu/i/X8/5I/6XuHF10bodnUgpXO88e1fIpPJ4Fov+fgLYwVSFKVZOvtZ
      wev1cu7kqWbl45XVVeydwY0Hrd+vIAj4f/Y+1vkIulpj8macyMJW76piMaO5e7gtjVOMJDHH
      c/R292w57uvG6WPHCBSrVBdWKCZTuG9+jtma4bhyG+3uNdRiicHOMKIo4llv7gftnOB9Tb0L
      u9jM2Q0Fg9y+cons0gqegV6s67b4htAL6yEJ33W+y4Cpi4rQBWy01wuCgCfcSaBU5fzzZxFF
      8aEnjYZHWmgRut2OrVaryLLcrNupKErTfNso0tDYm0LdzLrT9ciyzOnj9fDtmbk5kq4s3X3X
      +G3hGgvB32ZeErcNp2gLwD5GkiQ8Hg+apqHrOn6/n9/q7aVcLnPh6hVyYhFzh725/0m+9BzW
      pUUCprs8H7Zys8uDtumchmFQiic4943Xm6bVh6VWq5GenaPg8NDb6UPTNBYXF1FMCl6Pt2nZ
      MQyDbC7H+xc/w2PvIODx8eE7P2Mo3M25b76OzWYjm61v0huONlEUSa4s4e/ubdb+F0Vxy95O
      EARGhoZIe/6A4tzzTEfmUYe+jSJKJFbjW665bQV6RtF1nR+++1OsgxurQ0i6RnX5LpWqCUmW
      KddqmGUZXTewKQqKJDHQ1c1w/8Cu52/NFMvlciQSCaR0mtx//6/8p+6X+MPf+2UuXruCaW2F
      abWK12vF1RHi8Ng4Nqu1nrV29RJ+txWhsMqd2TUOl6/T9d1/h27UQys6Ozvvl24pl8h/+D/w
      vfbPEBVzU43RdZ2pO3eYGB/f9jPI5fN8ePlLspUy50YOMLxe7bpBWwCeUQzD4Nr169wp5+nw
      e+uz7uIy5prOsZEx+nt6miVCGmoI3M+u2kl9aagruq6jqioXL31J5M4kYUueVSPA6ew7LNoG
      8Z/4HkuJGNVMhoJZYSJ/hRvaCJ2hECePHAPgo08/JpdeI2eIDIhm4l4PI14vek1jbGxsQ45z
      A0EQsNlsj+QnaFxro77RhvO1BeDZpVar8TcfvIcR8JCPJ3muf4iB/oFH0utbUVWVK1cvsxaL
      c/b0mWZpdqiPnwuT1/D0henweIjdmuH546eoVCp8dvlLzh4/CUY9pqeh69+4cRU9eZM5I8iR
      q5Okjh5k7ORZisUiwWBwWxXMbrdjtVr3zJjR3gM8w8iyzJsvv8LVyRskp2bxjA0+sB7nZqrV
      KpVKhXw+z1xkHvXWuwQmXrufKbY+E69Gozg6/fRVZymrg0jr+rnZbOYb55/fsLmNrq2h6zp9
      fYPUuvuwJBL4T5xhZN1Gn8/nm9fYWJkav3Vd37DRfhAP8v+0BeAZRxRFRgYG0Wo5TBbbIw1+
      TdOI/PgnzH/2LuVjA2SUMOHhFxjo728KQMNac232DoNnjvH2WzeR5Nt0SPKGlaZx3OSd26T1
      KkqHDTUVxaYanD52HGBDBbrG8ZsplUoIgvDAhh8PS1sAnnEqlQqVSgWhbxzRet8i1EAQBNRK
      BTWzis3f2xxUhmGgaRqZQh5/JkbGNM7Jcy9seS3UZ/+VpSUq6Bw4c4IOt4vY/CKlUqm5Qtyc
      uk1GV3H1dGLPZnF0dlJTVRK35rY1neq6vq0KpOs6+Xwek8m0QQBKpRKapm0JnnuQwLcF4BnG
      MAzK5TKwbhHJ5ZpN4mq12n21olpGi1xAdYZQVZViscjU3AyqWkV1OTF+83cRJZl0Jo3FYsHQ
      jQ0mza5wmG+cf57FWBSn14sgCkiqtiGGP18p4RzsIRWNk1jM02e2otVq9AZC2173bkF2jRIt
      jZqhwK7JOrvxC+MJ/kWkVqttycctFoukUilyuRz5fJ58Pk9J1aj1v0o+n2dmZoa/eOcnSL1B
      7GN9RCsFOjoDVAWDO5E5Prx+nYs3r295r4DXh6FICGJ9xq1Wqxtm30PDY0irKUKCiVdOHkCM
      pVm+PLnF0tMowLubD0IUxa8cdt2gbQV6RjEMg3w+31wBWmfUzfr15gE4PTtDzq4wkrvILWEU
      XYdw9GOEUi8d7gS3TId5/ujJpvm0Wq3ysw/ep+/cMczrM3EpXyB6c5rXzr/Q3As0fjeuJZvN
      IgjCBrVF13Wi0SjhcHjHVcDhcGCxWPbEEtReAZ5RWtUf2Gjf3/zT+hqAzlAnpVyeRN+rpNMF
      zC43iYHXuSqbmA+epWYYJJP1Euir0SgXpm5g7vShVlRq5RL2xS+xOezYA14KxeKGwd/4WxRF
      3G43LpcLSZLqXd11nZWVFQKBQHMVaBzb+N/lcu3Z4If2HuCZxDCMZgjBds+1stncCGCzWimt
      JUhUNMJWF7aizkIuT19nN2OhQSx9ZhRF4W5knqVilvDEKFq1xtSXVxAMg143OBDw9nRxe26O
      42MTD3RcaZrG8vIyoVBog3rTujl2OBx73sClLQDPIOVymUKhsOGx1o3l5k3mdqvB0dFxwutt
      Ug3DQJyFkeHhDZYXURShWqOmqsgmExNHD6MpMlNfXGaiVkM2KQjuDmbn5jj8gI4xpVIJl8vV
      VG+gvl9pVL5oVds0TXtsZ95m2irQM0TDRJjP5zcM9obzqPXvzWxWTxoDr/HY2OjoFrt7f08v
      x4fGyK0l6paZXBJBlBg8NM69ySnKhSLuUICy18Z7X1xgYWlpx2u32+0UCgXM5vrq0gh4a6VU
      KlEoFPY0pL29AuxzGrE5pVIJVVV3nOUbj7XSGNzABvu/IAgbTIybaVVLOux2tGSOjCWBq7Oe
      cim7nAwcOsD8rTuYzGa6R4fQ9Xp3yt3OKQgCuVwORVEQRbHZ5b6Bpmlo6w3zbDbbnliC2ivA
      PqdUKpFOp6lUKrvazjerPK0qxE6/t/PEAhs2prIsMzE8wtq9SPN9MrEEqzP3MCkK5XyBpZk5
      aqqKaRehgnrvr0gk0hTm3e6lVCqxsLCwQei3u9cH0V4BngC1Wq3ZvOFJUq1Wt+j6D2KnWKDN
      K4bdbiefzzdTBxtsF37g9XpRDIHo5DSKJBFdXuH1F1/GarWSyWZJp9NEE3Fq5t2LZdlsNrq7
      u4lGow/VZzidTmO321EUpe6gW1fxPvvyCxw2Ox6Xi97e3t1Xs7YfYO95Ggn41WqVdDrdfL/t
      1JvNG1/YfgC3PtZqp19bW8NsNt/Pn91h49kYeK0Bb9sJ2sMGsS0tLREMBncduAArKyv4fL6m
      x7lxHVdvTiKFHAiJBbIVOwf7BgkGg3R0dGy5//YK8AR40nnHDefT5sG92/HbXVfr/5qmUavV
      mnq2oijk8nkWFhdxedwIwNDgEPI2q9rm1W6n+3/YzyUYDBKNRptWoc1omkYikdi2r7VhGKRL
      BXqsfkw2kZloCsXn5ubkMi5R4eWz5zdcR1sA9iENO/+DdP7WHN3WL307s+fFq5cpoCHIEqIs
      o5UrVIolHEE/ittKfn6Z0T2IvnwYFEWhu7ubeDy+xVNcLpdZWVkhHA5v0VYa92qTZC5/fAlR
      lukeGcLpr7eKjc7NUygUNpyvLQD7DF3XKZVKzUTxndic4QX3VZ3GbG0YBotLS8RiMZL5HCPn
      T+6o4hR4tDyCr4ogCLhcLtLpdHPAFotF1tbWGBwc3PW1Z46fpHblEu4Dg5gqFXIFFYtVRixV
      sG+qh9S2Au0zNE1rZmHtxk6pja3/x2IxJlciyIOdDJ87sesAF8WnX05GUZQNwXyJRIK+vr4d
      j2+9/rDXXw/nmJrmw08iqMUSTouNUqm0YeVsrwD7DF3Xd3Vm7cR2pUoWl5fx93ZhegjDh7s7
      3CzD8rQQBGFL0N6D7rHxfCydxDHaT+3QYV7WDPKRCM8fOU65XEbTNGRZrucUPPG7aLOntOr2
      O/3A1hVgs+0fYHhwkERkZ+9sA0EQUCW4dvvmlqYcTxqTydT0Cciy/MD3b9xjUa8hiCImk4TZ
      LGIR7odYV6tVSqUSmUymLQDPEjvF9zScVq2Bb+l0mks3rtE9MfpQ57bYbQidXianbj+Ra98J
      r9dLOp1G1/VmIa0HIQgCPW4f0alZMrE4yflFBrp7tz22rQLtMxqlPR628dzmlaBWq3H5xjVy
      koHnwCDyA2ztreRXYxzvH3ms635cJEmiVCoRjUabTQAfhrHhEQarVdZiMZx9YRw79BloC8A+
      ZCc9vDHQN2dZtebuTt6dwTPcR5dj04BoKaK7Hdl4kkFvcIsV5UlTqVSoVquEQqFHdtIqikJ3
      V9eux7RVoH1GrVbbYgJtVXMazbA3z/yRSITJ1QW6jo5j2zz4geXpe+g7+BUqxRLmYpVwqHPv
      b+gBmM3m5s+ToL0C7BMabv5G7M9m+35jVahUKhSLxQ2b4Uwmw7W5aUbOnUA3DLaLUOoa29m2
      nppb4Bunzm4IkmuUJXyQVehRavhshyDUK8G1VpjYS9orwD6h1QHWOuM30gYrlQoLCwvkcjns
      dnvzx2q1EgwGOXf4KOrcMsXZRUrZ/CO9t9QibLquc/XqVTRNY2FhoW4hWm/Z2vBQC4LQjC1r
      XPODHHe74fV6yWQyj/363WivAD9HGmG9Dyr114j9aRSF2qzeJBIJNE2ju7t7xwhUu91OZ6iT
      arXKx5NXsDp33swauo5arlBIZ9AqKiHv/c1nLpejq6uLWCyGYRjE4/ENzjlFUTCZTKyurtLd
      Xc8PqFQqxONxhjdllD0sDYH6qmy2kkFbAPaMRiGpR81ZfdDgb6g9jRzfzfb8SCSC1+t96G6K
      iqJg1cUdVZOaWiU9t4DPaqfHH8RsNm84dzwex2q1UiqVkCSJcrmMy+Uin89TqVSw2WzIskxn
      ZydWq5VCoUA2m22qcI/rSNuLMIztYqPaArCHtM6+jcwlk8m07axsGPVu77tt7nRdJ5vNNr2h
      jcHTOhgkSXrkVqL93T3cW4vjDm1scWroOul7i5yZOLztdQmCQDgcbqYvNjLHVlZWEASBgYEB
      UqkUHo8HwzCQZbnpvGr8/bg8SpLLTmznDW8LwB6xubxIpVJBVdWm6W7z7Kdp2o6zmq7rzTTH
      xuB/UBjAoxAMBJi7uogR9G84Z/LuIseHD+wolI1iuK1FcTVNw+Fw4HA4kCRpS4U2URQJhbZW
      f/t5sF1UbHsT/ISwWCw4nc5mgsjmALZGLArcX5obGV6ZTIZ8Pr9B793LSExRFBnp7iUdjTUf
      SyytMBbqpuMR7fySJOF2u5949lujbtBeUCwWm0W52ivAE2C7mWY3NSWRSPDJpS8w1l9SragM
      dfU0PZ+NL39zcNhXUSlcLhdqdBE66yuOXKjgH3p4T+vTplzeu06VjYBCaKtAXwtuzUzjGR9E
      XJ9F41Nz9PX1PdSG8XHNi2azmUNd/dyevktF0+i1u59qvP+j0miqsVcUCoV6oa09O2Obx6Ja
      rRIv5QnJ9famNVXFKVse2lpSLpdZWloiFAo98org9/k453Q+cDP+dWAvB7/dbm+uAu09wM+R
      RiFaR/i+NSYbWeHggQMPfQ6Hw0EwGGR1dZVMJvPI1hJFUbDb7XtecvDrjCAIOJ3Oev2hn/fF
      /KKSz+f54spl7hXT2Jz1xO9CJktXh/uB1RA2oygKPT096LrO8vLyU4/Zf5IYhkFum/6+e0Vb
      AH4O5PJ5Pp68SslrwxP0otXqA1Yxmymr2xe1fRg8Hg/BYJCVlZVmyZT9TrVaJZvN0vWAqM7H
      5Rdn3fsaMTM3i+JzIisKSmGNctlA8oUwWczMLS+ylkwy0NX9UPuAzQFijYoKmUzmsfcGXyca
      jrSvGlS3E+3CWE8ZwzD4y3ffJjA+vOPzK7emeenIyUdWhTZTrVZZW1trOqq+zlae3SgWi+Tz
      eYLB4J6fu60CPWUiCxEsAe+OzwuCwFd3+tdprAaaprG0tLRv9waNVa614cde0RaAp0w8kcDS
      sbu3da/m6XK5TDabRZIk7HY7U1NTzc4u+w2LxfKVQqp3oi0AT5lKrdpsJLcTe7UCJBKJZs6A
      yWSiv79/31qKLBbLIxcCfhj27+5oH2IYBgGPl8nZu1RrNXQBOvxeCokUggFyhxXZZKKUze2J
      vi6KIhaLZcMm2G63U6lUWF5exu/372m/rSeJyWTCZDI1hdfn8z0wlPxhaG+CnxKNuP5GUdtG
      kkc8Hm82hctms5TKZQr5PENDQ1/5PePxOC6Xa8fNdDQaBerFaPeDELSyurpKrVbD7XY/cjh4
      K20V6CnQaF3U0GEbg02SJEKhUNPc6XQ6CQWDT20SCoVCOBwOFhcXd2yq93Wls7OTcDj8WN7v
      VtoC8BRoZIs9bVpr/e+EzWajq6uLZDJJKpXak8STp4UkSSiKQqFQeKTrbq2g194DPGEMw3jo
      L6hQKOypB1dRFMrlcjPvYCckSWrOpouLi4TD4X3hPCsWi5RKJaCeq9zoF+Dz+Xa8/kwm0wyt
      CAQC/H9SPJBgl8zapwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='using polygon shapes' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
